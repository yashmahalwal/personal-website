{"version":3,"sources":["webpack:///./src/components/Projects/Megatreopuz/index.tsx","webpack:///./src/components/Projects/Megatreopuz/styles.module.scss"],"names":["Hero","className","classes","imageStack","imageHolder","row","src","alt","Introduction","clsx","introduction","Interface","interface","device","Architecture","architecture","Megatreopuz","onLoad","ref","React","useRef","imagesLoaded","useEffect","imgList","current","getElementsByTagName","length","i","img","document","createElement","onload","onerror","article","module","exports"],"mappings":"6FAAA,iEAKMA,EAAiB,WACrB,OACE,6BAASC,UAAWC,IAAQC,YAC1B,wBAAIF,UAAU,UAAd,2BACA,yBAAKA,UAAWC,IAAQE,aACtB,yBAAKH,UAAWC,IAAQG,KACtB,yBAAKC,IAAI,uBAAuBC,IAAI,gCACpC,yBAAKD,IAAI,yBAAyBC,IAAI,2BACtC,yBAAKD,IAAI,sBAAsBC,IAAI,gCAErC,yBAAKN,UAAWC,IAAQG,KACtB,yBACEC,IAAI,yBACJC,IAAI,sCAEN,yBACED,IAAI,uBACJC,IAAI,+CAQVC,EAAyB,WAC7B,OACE,6BAASP,UAAWQ,YAAKP,IAAQQ,aAAc,cAC7C,wBAAIT,UAAU,UAAd,gBACA,4UAOA,6BACA,6NASAU,EAAsB,WAC1B,OACE,6BAASV,UAAWQ,YAAKP,IAAQU,YAC/B,yBAAKX,UAAU,aACb,wBAAIA,UAAU,eAAd,kBACA,yBAAKA,UAAWC,IAAQW,QACtB,yBACEP,IAAI,2BACJC,IAAI,mCAEN,yBACED,IAAI,0BACJC,IAAI,mCAGR,yOAKA,6BACA,sOAUFO,EAAyB,WAC7B,OACE,6BAASb,UAAWQ,YAAKP,IAAQa,aAAc,cAC7C,wBAAId,UAAU,eAAd,gBACA,sOAKA,6BACA,gCACE,yBAAKK,IAAI,oBAAoBC,IAAI,6BACjC,iEAEF,6BACA,qNAKA,6BACA,gQAyCSS,UA/B6B,SAAC,GAAe,IAAbC,EAAa,EAAbA,OACvCC,EAAMC,IAAMC,OAAuB,MACnCC,EAAeF,IAAMC,OAAe,GAkB1C,OAhBAE,qBAAU,WAAM,QACRC,EAAO,oBAAGL,EAAIM,eAAP,aAAG,EAAaC,qBAAqB,cAArC,QAA+C,GAC5D,IAAKF,EAAQG,OAAQ,OAAOT,IAE5B,IAAK,IAAIU,EAAI,EAAGA,EAAIJ,EAAQG,OAAQC,IAAK,CACvC,IAAMC,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,OAASH,EAAII,QAAU,WACzBX,EAAaG,UACTH,EAAaG,UAAYD,EAAQG,QAAQT,KAG/CW,EAAItB,IAAMiB,EAAQI,GAAGrB,OAEtB,IAGD,6BAASY,IAAKA,EAAKjB,UAAWC,IAAQ+B,SACpC,wBAAIhC,UAAU,UAAd,eACA,kBAACD,EAAD,MACA,kBAACQ,EAAD,MACA,kBAACG,EAAD,MACA,kBAACG,EAAD,S,uBC1INoB,EAAOC,QAAU,CAAC,QAAU,gCAAgC,OAAS,+BAA+B,aAAe,qCAAqC,UAAY,kCAAkC,aAAe,qCAAqC,cAAc,oCAAoC,WAAa,oCAAoC,eAAe,qCAAqC,YAAc,qCAAqC,IAAM,4BAA4B,MAAQ","file":"6-e321130a2840ee42ef59.js","sourcesContent":["import clsx from \"clsx\"\nimport React, { RefObject, useEffect } from \"react\"\nimport { ProjectProps } from \"../Description\"\nimport classes from \"./styles.module.scss\"\n\nconst Hero: React.FC = () => {\n  return (\n    <section className={classes.imageStack}>\n      <h4 className=\"hidden\">A peek into megatreopuz</h4>\n      <div className={classes.imageHolder}>\n        <div className={classes.row}>\n          <img src=\"/dashboard-light.png\" alt=\"Megatreopuz Dashboard Light\" />\n          <img src=\"/megatreopuz-login.png\" alt=\"Megatreopuz Login Page\" />\n          <img src=\"/dashboard-dark.png\" alt=\"Megatreopuz Dashboard Dark\" />\n        </div>\n        <div className={classes.row}>\n          <img\n            src=\"/megatreopuz-login.png\"\n            alt=\"Megatreopuz Login Page - Repeated\"\n          />\n          <img\n            src=\"/dashboard-light.png\"\n            alt=\"Megatreopuz Dashboard Light - Repeated\"\n          />\n        </div>\n      </div>\n    </section>\n  )\n}\n\nconst Introduction: React.FC = () => {\n  return (\n    <section className={clsx(classes.introduction, \"container\")}>\n      <h4 className=\"hidden\">Introduction</h4>\n      <p>\n        Megatreopuz is an annual online cryptic hunt conducted by ISTE MANIT. It\n        is a battle of wits in the form of cunning puzzles, coded messages, and\n        mind-boggling questions. Participants from around the globe rack their\n        brains for solutions for over seven days with increasing difficulty with\n        every level.\n      </p>\n      <br />\n      <p>\n        The contest requires a web based platform. Every year, the platform gets\n        more challenging and sophisticated. This time, it wasn't enough to just\n        make it right. It needed to be exceptional.\n      </p>\n    </section>\n  )\n}\n\nconst Interface: React.FC = () => {\n  return (\n    <section className={clsx(classes.interface)}>\n      <div className=\"container\">\n        <h4 className=\"text-center\">User Interface</h4>\n        <div className={classes.device}>\n          <img\n            src=\"/megatreopuz-desktop.png\"\n            alt=\"Megatreopuz desktop screenshot\"\n          />\n          <img\n            src=\"/megatreopuz-tablet.png\"\n            alt=\"Megatreopuz mobile screenshot\"\n          />\n        </div>\n        <p>\n          User interface is powered by Material Design. That ensures a seamless,\n          intuitive and responsive user experience. Platform is written using\n          React with Relay and Next.js is used for server side rendering.\n        </p>\n        <br />\n        <p>\n          Flux architecture along with SSR model makes sure that the interface\n          is fast and highly scalable. GraphQL further ensures an effecient and\n          safe data fetching, providing a cutting edge performance.\n        </p>\n      </div>\n    </section>\n  )\n}\n\nconst Architecture: React.FC = () => {\n  return (\n    <section className={clsx(classes.architecture, \"container\")}>\n      <h4 className=\"text-center\">Architecture</h4>\n      <p>\n        Megatreopuz has a microservices based architecture under the hood. This\n        allows for scaling upwards as well downwards. Fast and effecient\n        technology more than makes up for the latency due to coupling.\n      </p>\n      <br />\n      <figure>\n        <img src=\"/architecture.png\" alt=\"Megatreopuz architecture\" />\n        <figcaption>Megatreopuz Architecture</figcaption>\n      </figure>\n      <br />\n      <p>\n        The entrance to architecture is provided by a GraphQL gateway. Auth\n        services are provided by firebase. Microservices are written using gRPC\n        that provides fast and type safe coupling.\n      </p>\n      <br />\n      <p>\n        All the components share a MongoDB based persistance and a Redis based\n        cache & pubsub system. The gRPC implementations are done in Go to\n        leverage the speed of a compiled language combined with a powerful\n        concurrency system.\n      </p>\n    </section>\n  )\n}\n\nconst Megatreopuz: React.FC<ProjectProps> = ({ onLoad }) => {\n  const ref = React.useRef<HTMLDivElement>(null)\n  const imagesLoaded = React.useRef<number>(0)\n\n  useEffect(() => {\n    const imgList = ref.current?.getElementsByTagName(\"img\") ?? []\n    if (!imgList.length) return onLoad()\n\n    for (let i = 0; i < imgList.length; i++) {\n      const img = document.createElement(\"img\")\n\n      img.onload = img.onerror = () => {\n        imagesLoaded.current++\n        if (imagesLoaded.current === imgList.length) onLoad()\n      }\n\n      img.src = imgList[i].src\n    }\n  }, [])\n\n  return (\n    <article ref={ref} className={classes.article}>\n      <h3 className=\"hidden\">Megatreopuz</h3>\n      <Hero />\n      <Introduction />\n      <Interface />\n      <Architecture />\n    </article>\n  )\n}\n\nexport default Megatreopuz\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"styles-module--article--2OmS5\",\"device\":\"styles-module--device--jXWpT\",\"introduction\":\"styles-module--introduction--3V-Eu\",\"interface\":\"styles-module--interface--1JZH2\",\"architecture\":\"styles-module--architecture--FGGuH\",\"image-stack\":\"styles-module--image-stack--3t1LE\",\"imageStack\":\"styles-module--image-stack--3t1LE\",\"image-holder\":\"styles-module--image-holder--I59vC\",\"imageHolder\":\"styles-module--image-holder--I59vC\",\"row\":\"styles-module--row--EPRXt\",\"logos\":\"styles-module--logos--2DUPa\"};"],"sourceRoot":""}