{"version":3,"sources":["webpack:///./src/components/Projects/Nirikshak/index.tsx","webpack:///./node_modules/figlet/importable-fonts/Standard.js","webpack:///./node_modules/figlet/lib/figlet.js","webpack:///./src/components/Projects/Nirikshak/styles.module.scss"],"names":["figlet","parseFont","Hero","useState","logo","setLogo","heroRef","useRef","enter","setEnter","useEffect","text","font","horizontalLayout","err","str","checkIfElementOnTop","current","setTimeout","aria-hidden","ref","className","classes","hero","terminal","buttons","close","minimize","cascade","content","green","blue","Opacity","duration","visible","figletLogo","tagLine","commands","Introduction","clsx","introduction","DataAnalysis","dataAnalysis","src","alt","FlowTesting","flowTesting","Nirikshak","onLoad","React","imagesLoaded","imgList","getElementsByTagName","length","i","img","document","createElement","onload","onerror","figFonts","figDefaults","fontPath","hRule1_Smush","ch1","ch2","hardBlank","hRule2_Smush","indexOf","hRule3_Smush","r3_pos1","r3_pos2","Math","abs","substr","max","hRule4_Smush","r4_pos1","r4_pos2","hRule5_Smush","r5_pos1","r5_pos2","hRule6_Smush","vRule1_Smush","vRule2_Smush","vRule3_Smush","vRule4_Smush","vRule5_Smush","uni_Smush","canVerticalSmush","txt1","txt2","opts","fittingRules","vLayout","ii","validSmush","len","min","endSmush","vRule1","vRule2","vRule3","vRule4","verticallySmushLines","line1","line2","result","vRule5","padLines","lines","numSpaces","padding","smushVerticalFigLines","output","len1","len2","lines1","lines2","overlap","line","piece3","piece1","slice","piece2_1","piece2_2","piece2","push","concat","verticalSmush","subLines1","subLines2","slen","ret","maxDist","curDist","getVerticalSmushDist","getHorizontalSmushLength","hLayout","seg1","seg2","breakAfter","distCal","hRule1","hRule2","hRule3","hRule4","hRule5","hRule6","horizontalSmush","textBlock1","textBlock2","jj","overlapStart","outputFig","height","nextCh","newFigChar","row","outputFigText","joinFigArray","array","reduce","acc","data","fig","breakWord","figChars","w","figLinesWidth","width","chars","generateFigTextLines","txt","charIndex","figChar","maxWidth","nextFigChars","_char","isSpace","textFigWord","textFigLine","tmpBreak","outputFigLines","figWords","whitespaceBreak","printDirection","split","reverse","join","match","charCodeAt","showHardBlanks","forEach","replace","RegExp","textLines","apply","map","generateText","fontName","options","figLines","me","next","_reworkFontOpts","fontOpts","params","prop","myOpts","JSON","parse","stringify","layout","props","getHorizontalFittingRules","verticalLayout","getVerticalFittingRules","arguments","loadFont","textSync","loadFontSync","metadata","comment","defaults","hasOwnProperty","headerData","splice","figFont","parseInt","baseline","maxLength","oldLayout","numCommentLines","fullLayout","codeTagCount","newLayout","val","index","code","rules","codes","getSmushingRules","isNaN","Error","charNums","cNum","endCharRegEx","parseError","numChars","test","console","log","fetch","error","then","response","ok","name","preloadFonts","fonts","fontData","promise","Promise","resolve","res","module","exports"],"mappings":"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","file":"9-f1720a4719281fb49385.js","sourcesContent":["import clsx from \"clsx\"\nimport React, { useEffect, useMemo, useRef, useState } from \"react\"\nimport { ProjectProps } from \"../Description\"\nimport classes from \"./styles.module.scss\"\nimport figlet from \"figlet\"\n//@ts-ignore\nimport standard from \"figlet/importable-fonts/Standard\"\nimport Opacity from \"../../Opacity\"\nimport { checkIfElementOnTop } from \"../../utils/checkTop\"\n//@ts-ignore\nfiglet.parseFont(\"Standard\", standard)\nconst Hero: React.FC = () => {\n  const [logo, setLogo] = useState(\"Nirikshak\")\n  const heroRef = useRef<HTMLDivElement>(null)\n  const [enter, setEnter] = useState<[boolean, boolean]>([false, false])\n  const opacityDuration = 300\n\n  useEffect(() => {\n    figlet.text(\n      \"Nirikshak\",\n      {\n        font: \"Standard\",\n        horizontalLayout: \"full\",\n      },\n      (err, str) => {\n        if (!err && str) setLogo(str)\n      }\n    )\n  }, [])\n\n  useEffect(() => {\n    checkIfElementOnTop(heroRef.current, function fadeIn() {\n      setEnter([false, false])\n      setTimeout(() => {\n        setEnter([true, false])\n        setTimeout(() => {\n          setEnter([true, true])\n        }, 1000)\n      }, 300)\n    })\n  }, [])\n  return (\n    <section aria-hidden={true} ref={heroRef} className={classes.hero}>\n      <div className={classes.terminal}>\n        <div className={classes.buttons}>\n          <div className={classes.close}></div>\n          <div className={classes.minimize}></div>\n          <div className={classes.cascade}></div>\n        </div>\n        <div className={classes.content}>\n          <code>\n            <b className={classes.green}>terminal@machine</b>:\n            <b className={classes.blue}>~$</b>&nbsp;nirikshak\n            <Opacity duration={opacityDuration} visible={enter[0]}>\n              <pre className={classes.figletLogo}>{logo}</pre>\n              <p className={classes.tagLine}>Test your REST APIs with ease</p>\n            </Opacity>\n            <Opacity duration={opacityDuration} visible={enter[1]}>\n              <table className={classes.commands}>\n                <tbody>\n                  <tr>\n                    <td>nirikshak init</td>\n                    <td>Initialise nirikshak in the project</td>\n                  </tr>\n                  <tr>\n                    <td>nirikshak add &lt;name&gt; [dir]</td>\n                    <td>Add a resource to the project</td>\n                  </tr>\n                  <tr>\n                    <td>nirikshak remove &lt;name&gt;</td>\n                    <td>Remove a resource from the project</td>\n                  </tr>\n                  <tr>\n                    <td>nirikshak run [name..]</td>\n                    <td>Run tests for specified resources</td>\n                  </tr>\n                </tbody>\n              </table>\n            </Opacity>\n          </code>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nconst Introduction: React.FC = () => {\n  return (\n    <section className={clsx(classes.introduction, \"container\")}>\n      <h4 className=\"hidden\">Introduction</h4>\n      <p>\n        Nirikshak is a REST API testing framework. It leverages semantics of\n        your application and provides autonomous testing. That means you get to\n        kick back and relax while it does all the hard work.\n      </p>\n      <br />\n      <p>\n        It generates test cases, runs them and analyses them for you. Nirikshak\n        provides unit testing and is extensible. This allows you to write custom\n        testing flows with minimal effort.\n      </p>\n    </section>\n  )\n}\n\nconst DataAnalysis: React.FC = () => {\n  return (\n    <section className={clsx(classes.dataAnalysis)}>\n      <div className=\"container\">\n        <h4 className=\"hidden\">Data analysis</h4>\n        <p>\n          Nirikshak analyses test log to generate a report. It provides you with\n          a ratio of failed tests to passed tests. It also groups the errors in\n          a hierarchical manner to provide fine grained information.\n        </p>\n        <figure>\n          <img src=\"/heirarchialBar.gif\" alt=\"Hierarchical bar graph\" />\n        </figure>\n        <br />\n        <p>\n          If the test cases are more than two hundred, it also performs five\n          dimensional density based clustering on the logs. The clustering\n          process is also influcenced by REST semantics. This causes similar\n          errors to group up. User can then identify & mitigate them\n          accordingly.\n        </p>\n      </div>\n    </section>\n  )\n}\n\nconst FlowTesting: React.FC = () => {\n  return (\n    <section className={classes.flowTesting}>\n      <div className=\"container\">\n        <h4 className=\"hidden\">Flow of testing</h4>\n        <p>\n          Nirikshak has a very straighforward yet powerful testing flow. You\n          only need to provide a basic description of your application and it\n          interpolates the remaining nformation using REST semantics.\n        </p>\n        <br />\n        <figure>\n          <img src=\"/Nirikshak-flow.png\" alt=\"Testing flow\" />\n        </figure>\n        <br />\n        <p>\n          On the basis of your description, Nirikshak generates a request\n          relationship graph. Traversal of this graph results in generating all\n          sequences of possible actions. Using these sequences, hundred of test\n          cases are generated on runtime. Nirikshak then invokes Jest to run\n          those cases.\n        </p>\n      </div>\n    </section>\n  )\n}\n\nconst Nirikshak: React.FC<ProjectProps> = ({ onLoad }) => {\n  const ref = React.useRef<HTMLDivElement>(null)\n  const imagesLoaded = React.useRef<number>(0)\n\n  useEffect(() => {\n    const imgList = ref.current?.getElementsByTagName(\"img\") ?? []\n    if (!imgList.length) return onLoad()\n\n    for (let i = 0; i < imgList.length; i++) {\n      const img = document.createElement(\"img\")\n\n      img.onload = img.onerror = () => {\n        imagesLoaded.current++\n        if (imagesLoaded.current === imgList.length) onLoad()\n      }\n\n      img.src = imgList[i].src\n    }\n  }, [])\n\n  return (\n    <article ref={ref}>\n      <h3 className=\"hidden\">Nirikshak</h3>\n      <Hero />\n      <Introduction />\n      <FlowTesting />\n      <DataAnalysis />\n    </article>\n  )\n}\n\nexport default Nirikshak\n","export default \"flf2a$ 6 5 16 15 13 0 24463 229\\nStandard by Glenn Chappell & Ian Chai 3/93 -- based on Frank's .sig\\nIncludes ISO Latin-1\\nfiglet release 2.1 -- 12 Aug 1994\\nModified for figlet 2.2 by John Cowan <cowan@ccil.org>\\n  to add Latin-{2,3,4,5} support (Unicode U+0100-017F).\\nPermission is hereby given to modify this font, as long as the\\nmodifier's name is placed on a comment line.\\n\\nModified by Paul Burton <solution@earthlink.net> 12/96 to include new parameter\\nsupported by FIGlet and FIGWin.  May also be slightly modified for better use\\nof new full-width/kern/smush alternatives, but default output is NOT changed.\\n\\nFont modified May 20, 2012 by patorjk to add the 0xCA0 character\\n $@\\n $@\\n $@\\n $@\\n $@\\n $@@\\n  _ @\\n | |@\\n | |@\\n |_|@\\n (_)@\\n    @@\\n  _ _ @\\n ( | )@\\n  V V @\\n   $  @\\n   $  @\\n      @@\\n    _  _   @\\n  _| || |_ @\\n |_  ..  _|@\\n |_      _|@\\n   |_||_|  @\\n           @@\\n   _  @\\n  | | @\\n / __)@\\n \\\\__ \\\\@\\n (   /@\\n  |_| @@\\n  _  __@\\n (_)/ /@\\n   / / @\\n  / /_ @\\n /_/(_)@\\n       @@\\n   ___   @\\n  ( _ )  @\\n  / _ \\\\/\\\\@\\n | (_>  <@\\n  \\\\___/\\\\/@\\n         @@\\n  _ @\\n ( )@\\n |/ @\\n  $ @\\n  $ @\\n    @@\\n   __@\\n  / /@\\n | | @\\n | | @\\n | | @\\n  \\\\_\\\\@@\\n __  @\\n \\\\ \\\\ @\\n  | |@\\n  | |@\\n  | |@\\n /_/ @@\\n       @\\n __/\\\\__@\\n \\\\    /@\\n /_  _\\\\@\\n   \\\\/  @\\n       @@\\n        @\\n    _   @\\n  _| |_ @\\n |_   _|@\\n   |_|  @\\n        @@\\n    @\\n    @\\n    @\\n  _ @\\n ( )@\\n |/ @@\\n        @\\n        @\\n  _____ @\\n |_____|@\\n    $   @\\n        @@\\n    @\\n    @\\n    @\\n  _ @\\n (_)@\\n    @@\\n     __@\\n    / /@\\n   / / @\\n  / /  @\\n /_/   @\\n       @@\\n   ___  @\\n  / _ \\\\ @\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n  _ @\\n / |@\\n | |@\\n | |@\\n |_|@\\n    @@\\n  ____  @\\n |___ \\\\ @\\n   __) |@\\n  / __/ @\\n |_____|@\\n        @@\\n  _____ @\\n |___ / @\\n   |_ \\\\ @\\n  ___) |@\\n |____/ @\\n        @@\\n  _  _   @\\n | || |  @\\n | || |_ @\\n |__   _|@\\n    |_|  @\\n         @@\\n  ____  @\\n | ___| @\\n |___ \\\\ @\\n  ___) |@\\n |____/ @\\n        @@\\n   __   @\\n  / /_  @\\n | '_ \\\\ @\\n | (_) |@\\n  \\\\___/ @\\n        @@\\n  _____ @\\n |___  |@\\n    / / @\\n   / /  @\\n  /_/   @\\n        @@\\n   ___  @\\n  ( _ ) @\\n  / _ \\\\ @\\n | (_) |@\\n  \\\\___/ @\\n        @@\\n   ___  @\\n  / _ \\\\ @\\n | (_) |@\\n  \\\\__, |@\\n    /_/ @\\n        @@\\n    @\\n  _ @\\n (_)@\\n  _ @\\n (_)@\\n    @@\\n    @\\n  _ @\\n (_)@\\n  _ @\\n ( )@\\n |/ @@\\n   __@\\n  / /@\\n / / @\\n \\\\ \\\\ @\\n  \\\\_\\\\@\\n     @@\\n        @\\n  _____ @\\n |_____|@\\n |_____|@\\n    $   @\\n        @@\\n __  @\\n \\\\ \\\\ @\\n  \\\\ \\\\@\\n  / /@\\n /_/ @\\n     @@\\n  ___ @\\n |__ \\\\@\\n   / /@\\n  |_| @\\n  (_) @\\n      @@\\n    ____  @\\n   / __ \\\\ @\\n  / / _` |@\\n | | (_| |@\\n  \\\\ \\\\__,_|@\\n   \\\\____/ @@\\n     _    @\\n    / \\\\   @\\n   / _ \\\\  @\\n  / ___ \\\\ @\\n /_/   \\\\_\\\\@\\n          @@\\n  ____  @\\n | __ ) @\\n |  _ \\\\ @\\n | |_) |@\\n |____/ @\\n        @@\\n   ____ @\\n  / ___|@\\n | |    @\\n | |___ @\\n  \\\\____|@\\n        @@\\n  ____  @\\n |  _ \\\\ @\\n | | | |@\\n | |_| |@\\n |____/ @\\n        @@\\n  _____ @\\n | ____|@\\n |  _|  @\\n | |___ @\\n |_____|@\\n        @@\\n  _____ @\\n |  ___|@\\n | |_   @\\n |  _|  @\\n |_|    @\\n        @@\\n   ____ @\\n  / ___|@\\n | |  _ @\\n | |_| |@\\n  \\\\____|@\\n        @@\\n  _   _ @\\n | | | |@\\n | |_| |@\\n |  _  |@\\n |_| |_|@\\n        @@\\n  ___ @\\n |_ _|@\\n  | | @\\n  | | @\\n |___|@\\n      @@\\n      _ @\\n     | |@\\n  _  | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n  _  __@\\n | |/ /@\\n | ' / @\\n | . \\\\ @\\n |_|\\\\_\\\\@\\n       @@\\n  _     @\\n | |    @\\n | |    @\\n | |___ @\\n |_____|@\\n        @@\\n  __  __ @\\n |  \\\\/  |@\\n | |\\\\/| |@\\n | |  | |@\\n |_|  |_|@\\n         @@\\n  _   _ @\\n | \\\\ | |@\\n |  \\\\| |@\\n | |\\\\  |@\\n |_| \\\\_|@\\n        @@\\n   ___  @\\n  / _ \\\\ @\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n  ____  @\\n |  _ \\\\ @\\n | |_) |@\\n |  __/ @\\n |_|    @\\n        @@\\n   ___  @\\n  / _ \\\\ @\\n | | | |@\\n | |_| |@\\n  \\\\__\\\\_\\\\@\\n        @@\\n  ____  @\\n |  _ \\\\ @\\n | |_) |@\\n |  _ < @\\n |_| \\\\_\\\\@\\n        @@\\n  ____  @\\n / ___| @\\n \\\\___ \\\\ @\\n  ___) |@\\n |____/ @\\n        @@\\n  _____ @\\n |_   _|@\\n   | |  @\\n   | |  @\\n   |_|  @\\n        @@\\n  _   _ @\\n | | | |@\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n __     __@\\n \\\\ \\\\   / /@\\n  \\\\ \\\\ / / @\\n   \\\\ V /  @\\n    \\\\_/   @\\n          @@\\n __        __@\\n \\\\ \\\\      / /@\\n  \\\\ \\\\ /\\\\ / / @\\n   \\\\ V  V /  @\\n    \\\\_/\\\\_/   @\\n             @@\\n __  __@\\n \\\\ \\\\/ /@\\n  \\\\  / @\\n  /  \\\\ @\\n /_/\\\\_\\\\@\\n       @@\\n __   __@\\n \\\\ \\\\ / /@\\n  \\\\ V / @\\n   | |  @\\n   |_|  @\\n        @@\\n  _____@\\n |__  /@\\n   / / @\\n  / /_ @\\n /____|@\\n       @@\\n  __ @\\n | _|@\\n | | @\\n | | @\\n | | @\\n |__|@@\\n __    @\\n \\\\ \\\\   @\\n  \\\\ \\\\  @\\n   \\\\ \\\\ @\\n    \\\\_\\\\@\\n       @@\\n  __ @\\n |_ |@\\n  | |@\\n  | |@\\n  | |@\\n |__|@@\\n  /\\\\ @\\n |/\\\\|@\\n   $ @\\n   $ @\\n   $ @\\n     @@\\n        @\\n        @\\n        @\\n        @\\n  _____ @\\n |_____|@@\\n  _ @\\n ( )@\\n  \\\\|@\\n  $ @\\n  $ @\\n    @@\\n        @\\n   __ _ @\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n  _     @\\n | |__  @\\n | '_ \\\\ @\\n | |_) |@\\n |_.__/ @\\n        @@\\n       @\\n   ___ @\\n  / __|@\\n | (__ @\\n  \\\\___|@\\n       @@\\n      _ @\\n   __| |@\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n       @\\n   ___ @\\n  / _ \\\\@\\n |  __/@\\n  \\\\___|@\\n       @@\\n   __ @\\n  / _|@\\n | |_ @\\n |  _|@\\n |_|  @\\n      @@\\n        @\\n   __ _ @\\n  / _` |@\\n | (_| |@\\n  \\\\__, |@\\n  |___/ @@\\n  _     @\\n | |__  @\\n | '_ \\\\ @\\n | | | |@\\n |_| |_|@\\n        @@\\n  _ @\\n (_)@\\n | |@\\n | |@\\n |_|@\\n    @@\\n    _ @\\n   (_)@\\n   | |@\\n   | |@\\n  _/ |@\\n |__/ @@\\n  _    @\\n | | __@\\n | |/ /@\\n |   < @\\n |_|\\\\_\\\\@\\n       @@\\n  _ @\\n | |@\\n | |@\\n | |@\\n |_|@\\n    @@\\n            @\\n  _ __ ___  @\\n | '_ ` _ \\\\ @\\n | | | | | |@\\n |_| |_| |_|@\\n            @@\\n        @\\n  _ __  @\\n | '_ \\\\ @\\n | | | |@\\n |_| |_|@\\n        @@\\n        @\\n   ___  @\\n  / _ \\\\ @\\n | (_) |@\\n  \\\\___/ @\\n        @@\\n        @\\n  _ __  @\\n | '_ \\\\ @\\n | |_) |@\\n | .__/ @\\n |_|    @@\\n        @\\n   __ _ @\\n  / _` |@\\n | (_| |@\\n  \\\\__, |@\\n     |_|@@\\n       @\\n  _ __ @\\n | '__|@\\n | |   @\\n |_|   @\\n       @@\\n      @\\n  ___ @\\n / __|@\\n \\\\__ \\\\@\\n |___/@\\n      @@\\n  _   @\\n | |_ @\\n | __|@\\n | |_ @\\n  \\\\__|@\\n      @@\\n        @\\n  _   _ @\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n        @@\\n        @\\n __   __@\\n \\\\ \\\\ / /@\\n  \\\\ V / @\\n   \\\\_/  @\\n        @@\\n           @\\n __      __@\\n \\\\ \\\\ /\\\\ / /@\\n  \\\\ V  V / @\\n   \\\\_/\\\\_/  @\\n           @@\\n       @\\n __  __@\\n \\\\ \\\\/ /@\\n  >  < @\\n /_/\\\\_\\\\@\\n       @@\\n        @\\n  _   _ @\\n | | | |@\\n | |_| |@\\n  \\\\__, |@\\n  |___/ @@\\n      @\\n  ____@\\n |_  /@\\n  / / @\\n /___|@\\n      @@\\n    __@\\n   / /@\\n  | | @\\n < <  @\\n  | | @\\n   \\\\_\\\\@@\\n  _ @\\n | |@\\n | |@\\n | |@\\n | |@\\n |_|@@\\n __   @\\n \\\\ \\\\  @\\n  | | @\\n   > >@\\n  | | @\\n /_/  @@\\n  /\\\\/|@\\n |/\\\\/ @\\n   $  @\\n   $  @\\n   $  @\\n      @@\\n  _   _ @\\n (_)_(_)@\\n   /_\\\\  @\\n  / _ \\\\ @\\n /_/ \\\\_\\\\@\\n        @@\\n  _   _ @\\n (_)_(_)@\\n  / _ \\\\ @\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n  _   _ @\\n (_) (_)@\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n  _   _ @\\n (_)_(_)@\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n  _   _ @\\n (_)_(_)@\\n  / _ \\\\ @\\n | (_) |@\\n  \\\\___/ @\\n        @@\\n  _   _ @\\n (_) (_)@\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n        @@\\n   ___ @\\n  / _ \\\\@\\n | |/ /@\\n | |\\\\ \\\\@\\n | ||_/@\\n |_|   @@\\n160  NO-BREAK SPACE\\n $@\\n $@\\n $@\\n $@\\n $@\\n $@@\\n161  INVERTED EXCLAMATION MARK\\n  _ @\\n (_)@\\n | |@\\n | |@\\n |_|@\\n    @@\\n162  CENT SIGN\\n    _  @\\n   | | @\\n  / __)@\\n | (__ @\\n  \\\\   )@\\n   |_| @@\\n163  POUND SIGN\\n    ___  @\\n   / ,_\\\\ @\\n _| |_   @\\n  | |___ @\\n (_,____|@\\n         @@\\n164  CURRENCY SIGN\\n /\\\\___/\\\\@\\n \\\\  _  /@\\n | (_) |@\\n / ___ \\\\@\\n \\\\/   \\\\/@\\n        @@\\n165  YEN SIGN\\n  __ __ @\\n  \\\\ V / @\\n |__ __|@\\n |__ __|@\\n   |_|  @\\n        @@\\n166  BROKEN BAR\\n  _ @\\n | |@\\n |_|@\\n  _ @\\n | |@\\n |_|@@\\n167  SECTION SIGN\\n    __ @\\n  _/ _)@\\n / \\\\ \\\\ @\\n \\\\ \\\\\\\\ \\\\@\\n  \\\\ \\\\_/@\\n (__/  @@\\n168  DIAERESIS\\n  _   _ @\\n (_) (_)@\\n  $   $ @\\n  $   $ @\\n  $   $ @\\n        @@\\n169  COPYRIGHT SIGN\\n    _____   @\\n   / ___ \\\\  @\\n  / / __| \\\\ @\\n | | (__   |@\\n  \\\\ \\\\___| / @\\n   \\\\_____/  @@\\n170  FEMININE ORDINAL INDICATOR\\n  __ _ @\\n / _` |@\\n \\\\__,_|@\\n |____|@\\n    $  @\\n       @@\\n171  LEFT-POINTING DOUBLE ANGLE QUOTATION MARK\\n   ____@\\n  / / /@\\n / / / @\\n \\\\ \\\\ \\\\ @\\n  \\\\_\\\\_\\\\@\\n       @@\\n172  NOT SIGN\\n        @\\n  _____ @\\n |___  |@\\n     |_|@\\n    $   @\\n        @@\\n173  SOFT HYPHEN\\n       @\\n       @\\n  ____ @\\n |____|@\\n    $  @\\n       @@\\n174  REGISTERED SIGN\\n    _____   @\\n   / ___ \\\\  @\\n  / | _ \\\\ \\\\ @\\n |  |   /  |@\\n  \\\\ |_|_\\\\ / @\\n   \\\\_____/  @@\\n175  MACRON\\n  _____ @\\n |_____|@\\n    $   @\\n    $   @\\n    $   @\\n        @@\\n176  DEGREE SIGN\\n   __  @\\n  /  \\\\ @\\n | () |@\\n  \\\\__/ @\\n    $  @\\n       @@\\n177  PLUS-MINUS SIGN\\n    _   @\\n  _| |_ @\\n |_   _|@\\n  _|_|_ @\\n |_____|@\\n        @@\\n178  SUPERSCRIPT TWO\\n  ___ @\\n |_  )@\\n  / / @\\n /___|@\\n   $  @\\n      @@\\n179  SUPERSCRIPT THREE\\n  ____@\\n |__ /@\\n  |_ \\\\@\\n |___/@\\n   $  @\\n      @@\\n180  ACUTE ACCENT\\n  __@\\n /_/@\\n  $ @\\n  $ @\\n  $ @\\n    @@\\n181  MICRO SIGN\\n        @\\n  _   _ @\\n | | | |@\\n | |_| |@\\n | ._,_|@\\n |_|    @@\\n182  PILCROW SIGN\\n   _____ @\\n  /     |@\\n | (| | |@\\n  \\\\__ | |@\\n    |_|_|@\\n         @@\\n183  MIDDLE DOT\\n    @\\n  _ @\\n (_)@\\n  $ @\\n  $ @\\n    @@\\n184  CEDILLA\\n    @\\n    @\\n    @\\n    @\\n  _ @\\n )_)@@\\n185  SUPERSCRIPT ONE\\n  _ @\\n / |@\\n | |@\\n |_|@\\n  $ @\\n    @@\\n186  MASCULINE ORDINAL INDICATOR\\n  ___ @\\n / _ \\\\@\\n \\\\___/@\\n |___|@\\n   $  @\\n      @@\\n187  RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK\\n ____  @\\n \\\\ \\\\ \\\\ @\\n  \\\\ \\\\ \\\\@\\n  / / /@\\n /_/_/ @\\n       @@\\n188  VULGAR FRACTION ONE QUARTER\\n  _   __    @\\n / | / / _  @\\n | |/ / | | @\\n |_/ /|_  _|@\\n  /_/   |_| @\\n            @@\\n189  VULGAR FRACTION ONE HALF\\n  _   __   @\\n / | / /__ @\\n | |/ /_  )@\\n |_/ / / / @\\n  /_/ /___|@\\n           @@\\n190  VULGAR FRACTION THREE QUARTERS\\n  ____  __    @\\n |__ / / / _  @\\n  |_ \\\\/ / | | @\\n |___/ /|_  _|@\\n    /_/   |_| @\\n              @@\\n191  INVERTED QUESTION MARK\\n   _  @\\n  (_) @\\n  | | @\\n / /_ @\\n \\\\___|@\\n      @@\\n192  LATIN CAPITAL LETTER A WITH GRAVE\\n   __   @\\n   \\\\_\\\\  @\\n   /_\\\\  @\\n  / _ \\\\ @\\n /_/ \\\\_\\\\@\\n        @@\\n193  LATIN CAPITAL LETTER A WITH ACUTE\\n    __  @\\n   /_/  @\\n   /_\\\\  @\\n  / _ \\\\ @\\n /_/ \\\\_\\\\@\\n        @@\\n194  LATIN CAPITAL LETTER A WITH CIRCUMFLEX\\n   //\\\\  @\\n  |/_\\\\| @\\n   /_\\\\  @\\n  / _ \\\\ @\\n /_/ \\\\_\\\\@\\n        @@\\n195  LATIN CAPITAL LETTER A WITH TILDE\\n   /\\\\/| @\\n  |/\\\\/  @\\n   /_\\\\  @\\n  / _ \\\\ @\\n /_/ \\\\_\\\\@\\n        @@\\n196  LATIN CAPITAL LETTER A WITH DIAERESIS\\n  _   _ @\\n (_)_(_)@\\n   /_\\\\  @\\n  / _ \\\\ @\\n /_/ \\\\_\\\\@\\n        @@\\n197  LATIN CAPITAL LETTER A WITH RING ABOVE\\n    _   @\\n   (o)  @\\n   /_\\\\  @\\n  / _ \\\\ @\\n /_/ \\\\_\\\\@\\n        @@\\n198  LATIN CAPITAL LETTER AE\\n     ______ @\\n    /  ____|@\\n   / _  _|  @\\n  / __ |___ @\\n /_/ |_____|@\\n            @@\\n199  LATIN CAPITAL LETTER C WITH CEDILLA\\n   ____ @\\n  / ___|@\\n | |    @\\n | |___ @\\n  \\\\____|@\\n    )_) @@\\n200  LATIN CAPITAL LETTER E WITH GRAVE\\n   __   @\\n  _\\\\_\\\\_ @\\n | ____|@\\n |  _|_ @\\n |_____|@\\n        @@\\n201  LATIN CAPITAL LETTER E WITH ACUTE\\n    __  @\\n  _/_/_ @\\n | ____|@\\n |  _|_ @\\n |_____|@\\n        @@\\n202  LATIN CAPITAL LETTER E WITH CIRCUMFLEX\\n   //\\\\  @\\n  |/_\\\\| @\\n | ____|@\\n |  _|_ @\\n |_____|@\\n        @@\\n203  LATIN CAPITAL LETTER E WITH DIAERESIS\\n  _   _ @\\n (_)_(_)@\\n | ____|@\\n |  _|_ @\\n |_____|@\\n        @@\\n204  LATIN CAPITAL LETTER I WITH GRAVE\\n  __  @\\n  \\\\_\\\\ @\\n |_ _|@\\n  | | @\\n |___|@\\n      @@\\n205  LATIN CAPITAL LETTER I WITH ACUTE\\n   __ @\\n  /_/ @\\n |_ _|@\\n  | | @\\n |___|@\\n      @@\\n206  LATIN CAPITAL LETTER I WITH CIRCUMFLEX\\n  //\\\\ @\\n |/_\\\\|@\\n |_ _|@\\n  | | @\\n |___|@\\n      @@\\n207  LATIN CAPITAL LETTER I WITH DIAERESIS\\n  _   _ @\\n (_)_(_)@\\n  |_ _| @\\n   | |  @\\n  |___| @\\n        @@\\n208  LATIN CAPITAL LETTER ETH\\n    ____  @\\n   |  _ \\\\ @\\n  _| |_| |@\\n |__ __| |@\\n   |____/ @\\n          @@\\n209  LATIN CAPITAL LETTER N WITH TILDE\\n   /\\\\/|@\\n  |/\\\\/ @\\n | \\\\| |@\\n | .` |@\\n |_|\\\\_|@\\n       @@\\n210  LATIN CAPITAL LETTER O WITH GRAVE\\n   __   @\\n   \\\\_\\\\  @\\n  / _ \\\\ @\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n211  LATIN CAPITAL LETTER O WITH ACUTE\\n    __  @\\n   /_/  @\\n  / _ \\\\ @\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n212  LATIN CAPITAL LETTER O WITH CIRCUMFLEX\\n   //\\\\  @\\n  |/_\\\\| @\\n  / _ \\\\ @\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n213  LATIN CAPITAL LETTER O WITH TILDE\\n   /\\\\/| @\\n  |/\\\\/  @\\n  / _ \\\\ @\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n214  LATIN CAPITAL LETTER O WITH DIAERESIS\\n  _   _ @\\n (_)_(_)@\\n  / _ \\\\ @\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n215  MULTIPLICATION SIGN\\n     @\\n     @\\n /\\\\/\\\\@\\n >  <@\\n \\\\/\\\\/@\\n     @@\\n216  LATIN CAPITAL LETTER O WITH STROKE\\n   ____ @\\n  / _// @\\n | |// |@\\n | //| |@\\n  //__/ @\\n        @@\\n217  LATIN CAPITAL LETTER U WITH GRAVE\\n   __   @\\n  _\\\\_\\\\_ @\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n218  LATIN CAPITAL LETTER U WITH ACUTE\\n    __  @\\n  _/_/_ @\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n219  LATIN CAPITAL LETTER U WITH CIRCUMFLEX\\n   //\\\\  @\\n  |/ \\\\| @\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n220  LATIN CAPITAL LETTER U WITH DIAERESIS\\n  _   _ @\\n (_) (_)@\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n221  LATIN CAPITAL LETTER Y WITH ACUTE\\n    __  @\\n __/_/__@\\n \\\\ \\\\ / /@\\n  \\\\ V / @\\n   |_|  @\\n        @@\\n222  LATIN CAPITAL LETTER THORN\\n  _     @\\n | |___ @\\n |  __ \\\\@\\n |  ___/@\\n |_|    @\\n        @@\\n223  LATIN SMALL LETTER SHARP S\\n   ___ @\\n  / _ \\\\@\\n | |/ /@\\n | |\\\\ \\\\@\\n | ||_/@\\n |_|   @@\\n224  LATIN SMALL LETTER A WITH GRAVE\\n   __   @\\n   \\\\_\\\\_ @\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n225  LATIN SMALL LETTER A WITH ACUTE\\n    __  @\\n   /_/_ @\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n226  LATIN SMALL LETTER A WITH CIRCUMFLEX\\n   //\\\\  @\\n  |/_\\\\| @\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n227  LATIN SMALL LETTER A WITH TILDE\\n   /\\\\/| @\\n  |/\\\\/_ @\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n228  LATIN SMALL LETTER A WITH DIAERESIS\\n  _   _ @\\n (_)_(_)@\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n229  LATIN SMALL LETTER A WITH RING ABOVE\\n    __  @\\n   (()) @\\n  / _ '|@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n230  LATIN SMALL LETTER AE\\n           @\\n   __ ____ @\\n  / _`  _ \\\\@\\n | (_|  __/@\\n  \\\\__,____|@\\n           @@\\n231  LATIN SMALL LETTER C WITH CEDILLA\\n       @\\n   ___ @\\n  / __|@\\n | (__ @\\n  \\\\___|@\\n   )_) @@\\n232  LATIN SMALL LETTER E WITH GRAVE\\n   __  @\\n   \\\\_\\\\ @\\n  / _ \\\\@\\n |  __/@\\n  \\\\___|@\\n       @@\\n233  LATIN SMALL LETTER E WITH ACUTE\\n    __ @\\n   /_/ @\\n  / _ \\\\@\\n |  __/@\\n  \\\\___|@\\n       @@\\n234  LATIN SMALL LETTER E WITH CIRCUMFLEX\\n   //\\\\ @\\n  |/_\\\\|@\\n  / _ \\\\@\\n |  __/@\\n  \\\\___|@\\n       @@\\n235  LATIN SMALL LETTER E WITH DIAERESIS\\n  _   _ @\\n (_)_(_)@\\n  / _ \\\\ @\\n |  __/ @\\n  \\\\___| @\\n        @@\\n236  LATIN SMALL LETTER I WITH GRAVE\\n __ @\\n \\\\_\\\\@\\n | |@\\n | |@\\n |_|@\\n    @@\\n237  LATIN SMALL LETTER I WITH ACUTE\\n  __@\\n /_/@\\n | |@\\n | |@\\n |_|@\\n    @@\\n238  LATIN SMALL LETTER I WITH CIRCUMFLEX\\n  //\\\\ @\\n |/_\\\\|@\\n  | | @\\n  | | @\\n  |_| @\\n      @@\\n239  LATIN SMALL LETTER I WITH DIAERESIS\\n  _   _ @\\n (_)_(_)@\\n   | |  @\\n   | |  @\\n   |_|  @\\n        @@\\n240  LATIN SMALL LETTER ETH\\n   /\\\\/\\\\ @\\n   >  < @\\n  _\\\\/\\\\ |@\\n / __` |@\\n \\\\____/ @\\n        @@\\n241  LATIN SMALL LETTER N WITH TILDE\\n   /\\\\/| @\\n  |/\\\\/  @\\n | '_ \\\\ @\\n | | | |@\\n |_| |_|@\\n        @@\\n242  LATIN SMALL LETTER O WITH GRAVE\\n   __   @\\n   \\\\_\\\\  @\\n  / _ \\\\ @\\n | (_) |@\\n  \\\\___/ @\\n        @@\\n243  LATIN SMALL LETTER O WITH ACUTE\\n    __  @\\n   /_/  @\\n  / _ \\\\ @\\n | (_) |@\\n  \\\\___/ @\\n        @@\\n244  LATIN SMALL LETTER O WITH CIRCUMFLEX\\n   //\\\\  @\\n  |/_\\\\| @\\n  / _ \\\\ @\\n | (_) |@\\n  \\\\___/ @\\n        @@\\n245  LATIN SMALL LETTER O WITH TILDE\\n   /\\\\/| @\\n  |/\\\\/  @\\n  / _ \\\\ @\\n | (_) |@\\n  \\\\___/ @\\n        @@\\n246  LATIN SMALL LETTER O WITH DIAERESIS\\n  _   _ @\\n (_)_(_)@\\n  / _ \\\\ @\\n | (_) |@\\n  \\\\___/ @\\n        @@\\n247  DIVISION SIGN\\n        @\\n    _   @\\n  _(_)_ @\\n |_____|@\\n   (_)  @\\n        @@\\n248  LATIN SMALL LETTER O WITH STROKE\\n         @\\n   ____  @\\n  / _//\\\\ @\\n | (//) |@\\n  \\\\//__/ @\\n         @@\\n249  LATIN SMALL LETTER U WITH GRAVE\\n   __   @\\n  _\\\\_\\\\_ @\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n        @@\\n250  LATIN SMALL LETTER U WITH ACUTE\\n    __  @\\n  _/_/_ @\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n        @@\\n251  LATIN SMALL LETTER U WITH CIRCUMFLEX\\n   //\\\\  @\\n  |/ \\\\| @\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n        @@\\n252  LATIN SMALL LETTER U WITH DIAERESIS\\n  _   _ @\\n (_) (_)@\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n        @@\\n253  LATIN SMALL LETTER Y WITH ACUTE\\n    __  @\\n  _/_/_ @\\n | | | |@\\n | |_| |@\\n  \\\\__, |@\\n  |___/ @@\\n254  LATIN SMALL LETTER THORN\\n  _     @\\n | |__  @\\n | '_ \\\\ @\\n | |_) |@\\n | .__/ @\\n |_|    @@\\n255  LATIN SMALL LETTER Y WITH DIAERESIS\\n  _   _ @\\n (_) (_)@\\n | | | |@\\n | |_| |@\\n  \\\\__, |@\\n  |___/ @@\\n0x0100  LATIN CAPITAL LETTER A WITH MACRON\\n   ____ @\\n  /___/ @\\n   /_\\\\  @\\n  / _ \\\\ @\\n /_/ \\\\_\\\\@\\n        @@\\n0x0101  LATIN SMALL LETTER A WITH MACRON\\n    ___ @\\n   /_ _/@\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n0x0102  LATIN CAPITAL LETTER A WITH BREVE\\n  _   _ @\\n  \\\\\\\\_// @\\n   /_\\\\  @\\n  / _ \\\\ @\\n /_/ \\\\_\\\\@\\n        @@\\n0x0103  LATIN SMALL LETTER A WITH BREVE\\n   \\\\_/  @\\n   ___  @\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n0x0104  LATIN CAPITAL LETTER A WITH OGONEK\\n        @\\n    _   @\\n   /_\\\\  @\\n  / _ \\\\ @\\n /_/ \\\\_\\\\@\\n     (_(@@\\n0x0105  LATIN SMALL LETTER A WITH OGONEK\\n        @\\n   __ _ @\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n     (_(@@\\n0x0106  LATIN CAPITAL LETTER C WITH ACUTE\\n     __ @\\n   _/_/ @\\n  / ___|@\\n | |___ @\\n  \\\\____|@\\n        @@\\n0x0107  LATIN SMALL LETTER C WITH ACUTE\\n    __ @\\n   /__/@\\n  / __|@\\n | (__ @\\n  \\\\___|@\\n       @@\\n0x0108  LATIN CAPITAL LETTER C WITH CIRCUMFLEX\\n     /\\\\ @\\n   _//\\\\\\\\@\\n  / ___|@\\n | |___ @\\n  \\\\____|@\\n        @@\\n0x0109  LATIN SMALL LETTER C WITH CIRCUMFLEX\\n    /\\\\ @\\n   /_\\\\ @\\n  / __|@\\n | (__ @\\n  \\\\___|@\\n       @@\\n0x010A  LATIN CAPITAL LETTER C WITH DOT ABOVE\\n    []  @\\n   ____ @\\n  / ___|@\\n | |___ @\\n  \\\\____|@\\n        @@\\n0x010B  LATIN SMALL LETTER C WITH DOT ABOVE\\n   []  @\\n   ___ @\\n  / __|@\\n | (__ @\\n  \\\\___|@\\n       @@\\n0x010C  LATIN CAPITAL LETTER C WITH CARON\\n   \\\\\\\\// @\\n   _\\\\/_ @\\n  / ___|@\\n | |___ @\\n  \\\\____|@\\n        @@\\n0x010D  LATIN SMALL LETTER C WITH CARON\\n   \\\\\\\\//@\\n   _\\\\/ @\\n  / __|@\\n | (__ @\\n  \\\\___|@\\n       @@\\n0x010E  LATIN CAPITAL LETTER D WITH CARON\\n   \\\\\\\\// @\\n  __\\\\/  @\\n |  _ \\\\ @\\n | |_| |@\\n |____/ @\\n        @@\\n0x010F  LATIN SMALL LETTER D WITH CARON\\n  \\\\/  _ @\\n   __| |@\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n0x0110  LATIN CAPITAL LETTER D WITH STROKE\\n   ____   @\\n  |_ __ \\\\ @\\n /| |/ | |@\\n /|_|/_| |@\\n  |_____/ @\\n          @@\\n0x0111  LATIN SMALL LETTER D WITH STROKE\\n    ---|@\\n   __| |@\\n  / _` |@\\n | (_| |@\\n  \\\\__,_|@\\n        @@\\n0x0112  LATIN CAPITAL LETTER E WITH MACRON\\n   ____ @\\n  /___/ @\\n | ____|@\\n |  _|_ @\\n |_____|@\\n        @@\\n0x0113  LATIN SMALL LETTER E WITH MACRON\\n    ____@\\n   /_ _/@\\n  / _ \\\\ @\\n |  __/ @\\n  \\\\___| @\\n        @@\\n0x0114  LATIN CAPITAL LETTER E WITH BREVE\\n  _   _ @\\n  \\\\\\\\_// @\\n | ____|@\\n |  _|_ @\\n |_____|@\\n        @@\\n0x0115  LATIN SMALL LETTER E WITH BREVE\\n  \\\\\\\\  //@\\n    --  @\\n  / _ \\\\ @\\n |  __/ @\\n  \\\\___| @\\n        @@\\n0x0116  LATIN CAPITAL LETTER E WITH DOT ABOVE\\n    []  @\\n  _____ @\\n | ____|@\\n |  _|_ @\\n |_____|@\\n        @@\\n0x0117  LATIN SMALL LETTER E WITH DOT ABOVE\\n    [] @\\n    __ @\\n  / _ \\\\@\\n |  __/@\\n  \\\\___|@\\n       @@\\n0x0118  LATIN CAPITAL LETTER E WITH OGONEK\\n        @\\n  _____ @\\n | ____|@\\n |  _|_ @\\n |_____|@\\n    (__(@@\\n0x0119  LATIN SMALL LETTER E WITH OGONEK\\n       @\\n   ___ @\\n  / _ \\\\@\\n |  __/@\\n  \\\\___|@\\n    (_(@@\\n0x011A  LATIN CAPITAL LETTER E WITH CARON\\n   \\\\\\\\// @\\n  __\\\\/_ @\\n | ____|@\\n |  _|_ @\\n |_____|@\\n        @@\\n0x011B  LATIN SMALL LETTER E WITH CARON\\n   \\\\\\\\//@\\n    \\\\/ @\\n  / _ \\\\@\\n |  __/@\\n  \\\\___|@\\n       @@\\n0x011C  LATIN CAPITAL LETTER G WITH CIRCUMFLEX\\n   _/\\\\_ @\\n  / ___|@\\n | |  _ @\\n | |_| |@\\n  \\\\____|@\\n        @@\\n0x011D  LATIN SMALL LETTER G WITH CIRCUMFLEX\\n     /\\\\ @\\n   _/_ \\\\@\\n  / _` |@\\n | (_| |@\\n  \\\\__, |@\\n  |___/ @@\\n0x011E  LATIN CAPITAL LETTER G WITH BREVE\\n   _\\\\/_ @\\n  / ___|@\\n | |  _ @\\n | |_| |@\\n  \\\\____|@\\n        @@\\n0x011F  LATIN SMALL LETTER G WITH BREVE\\n  \\\\___/ @\\n   __ _ @\\n  / _` |@\\n | (_| |@\\n  \\\\__, |@\\n  |___/ @@\\n0x0120  LATIN CAPITAL LETTER G WITH DOT ABOVE\\n   _[]_ @\\n  / ___|@\\n | |  _ @\\n | |_| |@\\n  \\\\____|@\\n        @@\\n0x0121  LATIN SMALL LETTER G WITH DOT ABOVE\\n   []   @\\n   __ _ @\\n  / _` |@\\n | (_| |@\\n  \\\\__, |@\\n  |___/ @@\\n0x0122  LATIN CAPITAL LETTER G WITH CEDILLA\\n   ____ @\\n  / ___|@\\n | |  _ @\\n | |_| |@\\n  \\\\____|@\\n   )__) @@\\n0x0123  LATIN SMALL LETTER G WITH CEDILLA\\n        @\\n   __ _ @\\n  / _` |@\\n | (_| |@\\n  \\\\__, |@\\n  |_))))@@\\n0x0124  LATIN CAPITAL LETTER H WITH CIRCUMFLEX\\n  _/ \\\\_ @\\n | / \\\\ |@\\n | |_| |@\\n |  _  |@\\n |_| |_|@\\n        @@\\n0x0125  LATIN SMALL LETTER H WITH CIRCUMFLEX\\n  _  /\\\\ @\\n | |//\\\\ @\\n | '_ \\\\ @\\n | | | |@\\n |_| |_|@\\n        @@\\n0x0126  LATIN CAPITAL LETTER H WITH STROKE\\n  _   _ @\\n | |=| |@\\n | |_| |@\\n |  _  |@\\n |_| |_|@\\n        @@\\n0x0127  LATIN SMALL LETTER H WITH STROKE\\n  _     @\\n |=|__  @\\n | '_ \\\\ @\\n | | | |@\\n |_| |_|@\\n        @@\\n0x0128  LATIN CAPITAL LETTER I WITH TILDE\\n  /\\\\//@\\n |_ _|@\\n  | | @\\n  | | @\\n |___|@\\n      @@\\n0x0129  LATIN SMALL LETTER I WITH TILDE\\n    @\\n /\\\\/@\\n | |@\\n | |@\\n |_|@\\n    @@\\n0x012A  LATIN CAPITAL LETTER I WITH MACRON\\n /___/@\\n |_ _|@\\n  | | @\\n  | | @\\n |___|@\\n      @@\\n0x012B  LATIN SMALL LETTER I WITH MACRON\\n  ____@\\n /___/@\\n  | | @\\n  | | @\\n  |_| @\\n      @@\\n0x012C  LATIN CAPITAL LETTER I WITH BREVE\\n  \\\\__/@\\n |_ _|@\\n  | | @\\n  | | @\\n |___|@\\n      @@\\n0x012D  LATIN SMALL LETTER I WITH BREVE\\n    @\\n \\\\_/@\\n | |@\\n | |@\\n |_|@\\n    @@\\n0x012E  LATIN CAPITAL LETTER I WITH OGONEK\\n  ___ @\\n |_ _|@\\n  | | @\\n  | | @\\n |___|@\\n  (__(@@\\n0x012F  LATIN SMALL LETTER I WITH OGONEK\\n  _  @\\n (_) @\\n | | @\\n | | @\\n |_|_@\\n  (_(@@\\n0x0130  LATIN CAPITAL LETTER I WITH DOT ABOVE\\n  _[] @\\n |_ _|@\\n  | | @\\n  | | @\\n |___|@\\n      @@\\n0x0131  LATIN SMALL LETTER DOTLESS I\\n    @\\n  _ @\\n | |@\\n | |@\\n |_|@\\n    @@\\n0x0132  LATIN CAPITAL LIGATURE IJ\\n  ___  _ @\\n |_ _|| |@\\n  | | | |@\\n  | |_| |@\\n |__|__/ @\\n         @@\\n0x0133  LATIN SMALL LIGATURE IJ\\n  _   _ @\\n (_) (_)@\\n | | | |@\\n | | | |@\\n |_|_/ |@\\n   |__/ @@\\n0x0134  LATIN CAPITAL LETTER J WITH CIRCUMFLEX\\n      /\\\\ @\\n     /_\\\\|@\\n  _  | | @\\n | |_| | @\\n  \\\\___/  @\\n         @@\\n0x0135  LATIN SMALL LETTER J WITH CIRCUMFLEX\\n    /\\\\@\\n   /_\\\\@\\n   | |@\\n   | |@\\n  _/ |@\\n |__/ @@\\n0x0136  LATIN CAPITAL LETTER K WITH CEDILLA\\n  _  _  @\\n | |/ / @\\n | ' /  @\\n | . \\\\  @\\n |_|\\\\_\\\\ @\\n    )__)@@\\n0x0137  LATIN SMALL LETTER K WITH CEDILLA\\n  _    @\\n | | __@\\n | |/ /@\\n |   < @\\n |_|\\\\_\\\\@\\n    )_)@@\\n0x0138  LATIN SMALL LETTER KRA\\n       @\\n  _ __ @\\n | |/ \\\\@\\n |   < @\\n |_|\\\\_\\\\@\\n       @@\\n0x0139  LATIN CAPITAL LETTER L WITH ACUTE\\n  _   //@\\n | | // @\\n | |    @\\n | |___ @\\n |_____|@\\n        @@\\n0x013A  LATIN SMALL LETTER L WITH ACUTE\\n  //@\\n | |@\\n | |@\\n | |@\\n |_|@\\n    @@\\n0x013B  LATIN CAPITAL LETTER L WITH CEDILLA\\n  _     @\\n | |    @\\n | |    @\\n | |___ @\\n |_____|@\\n    )__)@@\\n0x013C  LATIN SMALL LETTER L WITH CEDILLA\\n  _   @\\n | |  @\\n | |  @\\n | |  @\\n |_|  @\\n   )_)@@\\n0x013D  LATIN CAPITAL LETTER L WITH CARON\\n  _ \\\\\\\\//@\\n | | \\\\/ @\\n | |    @\\n | |___ @\\n |_____|@\\n        @@\\n0x013E  LATIN SMALL LETTER L WITH CARON\\n  _ \\\\\\\\//@\\n | | \\\\/ @\\n | |    @\\n | |    @\\n |_|    @\\n        @@\\n0x013F  LATIN CAPITAL LETTER L WITH MIDDLE DOT\\n  _     @\\n | |    @\\n | | [] @\\n | |___ @\\n |_____|@\\n        @@\\n0x0140  LATIN SMALL LETTER L WITH MIDDLE DOT\\n  _    @\\n | |   @\\n | | []@\\n | |   @\\n |_|   @\\n       @@\\n0x0141  LATIN CAPITAL LETTER L WITH STROKE\\n  __    @\\n | //   @\\n |//|   @\\n // |__ @\\n |_____|@\\n        @@\\n0x0142  LATIN SMALL LETTER L WITH STROKE\\n  _ @\\n | |@\\n |//@\\n //|@\\n |_|@\\n    @@\\n0x0143  LATIN CAPITAL LETTER N WITH ACUTE\\n  _/ /_ @\\n | \\\\ | |@\\n |  \\\\| |@\\n | |\\\\  |@\\n |_| \\\\_|@\\n        @@\\n0x0144  LATIN SMALL LETTER N WITH ACUTE\\n     _  @\\n  _ /_/ @\\n | '_ \\\\ @\\n | | | |@\\n |_| |_|@\\n        @@\\n0x0145  LATIN CAPITAL LETTER N WITH CEDILLA\\n  _   _ @\\n | \\\\ | |@\\n |  \\\\| |@\\n | |\\\\  |@\\n |_| \\\\_|@\\n )_)    @@\\n0x0146  LATIN SMALL LETTER N WITH CEDILLA\\n        @\\n  _ __  @\\n | '_ \\\\ @\\n | | | |@\\n |_| |_|@\\n )_)    @@\\n0x0147  LATIN CAPITAL LETTER N WITH CARON\\n  _\\\\/ _ @\\n | \\\\ | |@\\n |  \\\\| |@\\n | |\\\\  |@\\n |_| \\\\_|@\\n        @@\\n0x0148  LATIN SMALL LETTER N WITH CARON\\n  \\\\\\\\//  @\\n  _\\\\/_  @\\n | '_ \\\\ @\\n | | | |@\\n |_| |_|@\\n        @@\\n0x0149  LATIN SMALL LETTER N PRECEDED BY APOSTROPHE\\n          @\\n  _  __   @\\n ( )| '_\\\\ @\\n |/| | | |@\\n   |_| |_|@\\n          @@\\n0x014A  LATIN CAPITAL LETTER ENG\\n  _   _ @\\n | \\\\ | |@\\n |  \\\\| |@\\n | |\\\\  |@\\n |_| \\\\ |@\\n     )_)@@\\n0x014B  LATIN SMALL LETTER ENG\\n  _ __  @\\n | '_ \\\\ @\\n | | | |@\\n |_| | |@\\n     | |@\\n    |__ @@\\n0x014C  LATIN CAPITAL LETTER O WITH MACRON\\n   ____ @\\n  /_ _/ @\\n  / _ \\\\ @\\n | (_) |@\\n  \\\\___/ @\\n        @@\\n0x014D  LATIN SMALL LETTER O WITH MACRON\\n   ____ @\\n  /_ _/ @\\n  / _ \\\\ @\\n | (_) |@\\n  \\\\___/ @\\n        @@\\n0x014E  LATIN CAPITAL LETTER O WITH BREVE\\n  \\\\   / @\\n   _-_  @\\n  / _ \\\\ @\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n0x014F  LATIN SMALL LETTER O WITH BREVE\\n  \\\\   / @\\n   _-_  @\\n  / _ \\\\ @\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n0x0150  LATIN CAPITAL LETTER O WITH DOUBLE ACUTE\\n    ___ @\\n   /_/_/@\\n  / _ \\\\ @\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n0x0151  LATIN SMALL LETTER O WITH DOUBLE ACUTE\\n    ___ @\\n   /_/_/@\\n  / _ \\\\ @\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n0x0152  LATIN CAPITAL LIGATURE OE\\n   ___  ___ @\\n  / _ \\\\| __|@\\n | | | |  | @\\n | |_| | |__@\\n  \\\\___/|____@\\n            @@\\n0x0153  LATIN SMALL LIGATURE OE\\n             @\\n   ___   ___ @\\n  / _ \\\\ / _ \\\\@\\n | (_) |  __/@\\n  \\\\___/ \\\\___|@\\n             @@\\n0x0154  LATIN CAPITAL LETTER R WITH ACUTE\\n  _/_/  @\\n |  _ \\\\ @\\n | |_) |@\\n |  _ < @\\n |_| \\\\_\\\\@\\n        @@\\n0x0155  LATIN SMALL LETTER R WITH ACUTE\\n     __@\\n  _ /_/@\\n | '__|@\\n | |   @\\n |_|   @\\n       @@\\n0x0156  LATIN CAPITAL LETTER R WITH CEDILLA\\n  ____  @\\n |  _ \\\\ @\\n | |_) |@\\n |  _ < @\\n |_| \\\\_\\\\@\\n )_)    @@\\n0x0157  LATIN SMALL LETTER R WITH CEDILLA\\n       @\\n  _ __ @\\n | '__|@\\n | |   @\\n |_|   @\\n   )_) @@\\n0x0158  LATIN CAPITAL LETTER R WITH CARON\\n  _\\\\_/  @\\n |  _ \\\\ @\\n | |_) |@\\n |  _ < @\\n |_| \\\\_\\\\@\\n        @@\\n0x0159  LATIN SMALL LETTER R WITH CARON\\n  \\\\\\\\// @\\n  _\\\\/_ @\\n | '__|@\\n | |   @\\n |_|   @\\n       @@\\n0x015A  LATIN CAPITAL LETTER S WITH ACUTE\\n  _/_/  @\\n / ___| @\\n \\\\___ \\\\ @\\n  ___) |@\\n |____/ @\\n        @@\\n0x015B  LATIN SMALL LETTER S WITH ACUTE\\n    __@\\n  _/_/@\\n / __|@\\n \\\\__ \\\\@\\n |___/@\\n      @@\\n0x015C  LATIN CAPITAL LETTER S WITH CIRCUMFLEX\\n  _/\\\\_  @\\n / ___| @\\n \\\\___ \\\\ @\\n  ___) |@\\n |____/ @\\n        @@\\n0x015D  LATIN SMALL LETTER S WITH CIRCUMFLEX\\n      @\\n  /_\\\\_@\\n / __|@\\n \\\\__ \\\\@\\n |___/@\\n      @@\\n0x015E  LATIN CAPITAL LETTER S WITH CEDILLA\\n  ____  @\\n / ___| @\\n \\\\___ \\\\ @\\n  ___) |@\\n |____/ @\\n    )__)@@\\n0x015F  LATIN SMALL LETTER S WITH CEDILLA\\n      @\\n  ___ @\\n / __|@\\n \\\\__ \\\\@\\n |___/@\\n   )_)@@\\n0x0160  LATIN CAPITAL LETTER S WITH CARON\\n  _\\\\_/  @\\n / ___| @\\n \\\\___ \\\\ @\\n  ___) |@\\n |____/ @\\n        @@\\n0x0161  LATIN SMALL LETTER S WITH CARON\\n  \\\\\\\\//@\\n  _\\\\/ @\\n / __|@\\n \\\\__ \\\\@\\n |___/@\\n      @@\\n0x0162  LATIN CAPITAL LETTER T WITH CEDILLA\\n  _____ @\\n |_   _|@\\n   | |  @\\n   | |  @\\n   |_|  @\\n    )__)@@\\n0x0163  LATIN SMALL LETTER T WITH CEDILLA\\n  _   @\\n | |_ @\\n | __|@\\n | |_ @\\n  \\\\__|@\\n   )_)@@\\n0x0164  LATIN CAPITAL LETTER T WITH CARON\\n  _____ @\\n |_   _|@\\n   | |  @\\n   | |  @\\n   |_|  @\\n        @@\\n0x0165  LATIN SMALL LETTER T WITH CARON\\n  \\\\/  @\\n | |_ @\\n | __|@\\n | |_ @\\n  \\\\__|@\\n      @@\\n0x0166  LATIN CAPITAL LETTER T WITH STROKE\\n  _____ @\\n |_   _|@\\n   | |  @\\n  -|-|- @\\n   |_|  @\\n        @@\\n0x0167  LATIN SMALL LETTER T WITH STROKE\\n  _   @\\n | |_ @\\n | __|@\\n |-|_ @\\n  \\\\__|@\\n      @@\\n0x0168  LATIN CAPITAL LETTER U WITH TILDE\\n        @\\n  _/\\\\/_ @\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n0x0169  LATIN SMALL LETTER U WITH TILDE\\n        @\\n  _/\\\\/_ @\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n        @@\\n0x016A  LATIN CAPITAL LETTER U WITH MACRON\\n   ____ @\\n  /__ _/@\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n0x016B  LATIN SMALL LETTER U WITH MACRON\\n   ____ @\\n  / _  /@\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n        @@\\n0x016C  LATIN CAPITAL LETTER U WITH BREVE\\n        @\\n   \\\\_/_ @\\n | | | |@\\n | |_| |@\\n  \\\\____|@\\n        @@\\n0x016D  LATIN SMALL LETTER U WITH BREVE\\n        @\\n   \\\\_/_ @\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n        @@\\n0x016E  LATIN CAPITAL LETTER U WITH RING ABOVE\\n    O   @\\n  __  _ @\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n0x016F  LATIN SMALL LETTER U WITH RING ABOVE\\n    O   @\\n  __ __ @\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n        @@\\n0x0170  LATIN CAPITAL LETTER U WITH DOUBLE ACUTE\\n   -- --@\\n  /_//_/@\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n        @@\\n0x0171  LATIN SMALL LETTER U WITH DOUBLE ACUTE\\n    ____@\\n  _/_/_/@\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n        @@\\n0x0172  LATIN CAPITAL LETTER U WITH OGONEK\\n  _   _ @\\n | | | |@\\n | | | |@\\n | |_| |@\\n  \\\\___/ @\\n    (__(@@\\n0x0173  LATIN SMALL LETTER U WITH OGONEK\\n        @\\n  _   _ @\\n | | | |@\\n | |_| |@\\n  \\\\__,_|@\\n     (_(@@\\n0x0174  LATIN CAPITAL LETTER W WITH CIRCUMFLEX\\n __    /\\\\  __@\\n \\\\ \\\\  //\\\\\\\\/ /@\\n  \\\\ \\\\ /\\\\ / / @\\n   \\\\ V  V /  @\\n    \\\\_/\\\\_/   @\\n             @@\\n0x0175  LATIN SMALL LETTER W WITH CIRCUMFLEX\\n      /\\\\   @\\n __  //\\\\\\\\__@\\n \\\\ \\\\ /\\\\ / /@\\n  \\\\ V  V / @\\n   \\\\_/\\\\_/  @\\n           @@\\n0x0176  LATIN CAPITAL LETTER Y WITH CIRCUMFLEX\\n    /\\\\  @\\n __//\\\\\\\\ @\\n \\\\ \\\\ / /@\\n  \\\\ V / @\\n   |_|  @\\n        @@\\n0x0177  LATIN SMALL LETTER Y WITH CIRCUMFLEX\\n    /\\\\  @\\n   //\\\\\\\\ @\\n | | | |@\\n | |_| |@\\n  \\\\__, |@\\n  |___/ @@\\n0x0178  LATIN CAPITAL LETTER Y WITH DIAERESIS\\n  []  []@\\n __    _@\\n \\\\ \\\\ / /@\\n  \\\\ V / @\\n   |_|  @\\n        @@\\n0x0179  LATIN CAPITAL LETTER Z WITH ACUTE\\n  __/_/@\\n |__  /@\\n   / / @\\n  / /_ @\\n /____|@\\n       @@\\n0x017A  LATIN SMALL LETTER Z WITH ACUTE\\n    _ @\\n  _/_/@\\n |_  /@\\n  / / @\\n /___|@\\n      @@\\n0x017B  LATIN CAPITAL LETTER Z WITH DOT ABOVE\\n  __[]_@\\n |__  /@\\n   / / @\\n  / /_ @\\n /____|@\\n       @@\\n0x017C  LATIN SMALL LETTER Z WITH DOT ABOVE\\n   [] @\\n  ____@\\n |_  /@\\n  / / @\\n /___|@\\n      @@\\n0x017D  LATIN CAPITAL LETTER Z WITH CARON\\n  _\\\\_/_@\\n |__  /@\\n   / / @\\n  / /_ @\\n /____|@\\n       @@\\n0x017E  LATIN SMALL LETTER Z WITH CARON\\n  \\\\\\\\//@\\n  _\\\\/_@\\n |_  /@\\n  / / @\\n /___|@\\n      @@\\n0x017F  LATIN SMALL LETTER LONG S\\n     __ @\\n    / _|@\\n |-| |  @\\n |-| |  @\\n   |_|  @\\n        @@\\n0x02C7  CARON\\n \\\\\\\\//@\\n  \\\\/ @\\n    $@\\n    $@\\n    $@\\n    $@@\\n0x02D8  BREVE\\n \\\\\\\\_//@\\n  \\\\_/ @\\n     $@\\n     $@\\n     $@\\n     $@@\\n0x02D9  DOT ABOVE\\n []@\\n  $@\\n  $@\\n  $@\\n  $@\\n  $@@\\n0x02DB  OGONEK\\n    $@\\n    $@\\n    $@\\n    $@\\n    $@\\n )_) @@\\n0x02DD  DOUBLE ACUTE ACCENT\\n  _ _ @\\n /_/_/@\\n     $@\\n     $@\\n     $@\\n     $@@\\n0xCA0  KANNADA LETTER TTHA\\n   _____)@\\n  /_ ___/@\\n  / _ \\\\  @\\n | (_) | @\\n $\\\\___/$ @\\n         @@\\n         \";","/*\n    FIGlet.js (a FIGDriver for FIGlet fonts)\n    By Patrick Gillespie (patorjk@gmail.com)\n    Originally Written For: http://patorjk.com/software/taag/\n    License: MIT (with this header staying intact)\n\n    This JavaScript code aims to fully implement the FIGlet spec.\n    Full FIGlet spec: http://patorjk.com/software/taag/docs/figfont.txt\n\n    FIGlet fonts are actually kind of complex, which is why you will see\n    a lot of code about parsing and interpreting rules. The actual generation\n    code is pretty simple and is done near the bottom of the code.\n*/\n\"use strict\";\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nvar figlet = figlet || function () {\n  // ---------------------------------------------------------------------\n  // Private static variables\n  var FULL_WIDTH = 0,\n      FITTING = 1,\n      SMUSHING = 2,\n      CONTROLLED_SMUSHING = 3; // ---------------------------------------------------------------------\n  // Variable that will hold information about the fonts\n\n  var figFonts = {}; // What stores all of the FIGlet font data\n\n  var figDefaults = {\n    font: 'Standard',\n    fontPath: './fonts'\n  }; // ---------------------------------------------------------------------\n  // Private static methods\n\n  /*\n      This method takes in the oldLayout and newLayout data from the FIGfont header file and returns\n      the layout information.\n  */\n\n  function getSmushingRules(oldLayout, newLayout) {\n    var rules = {};\n    var val, index, len, code;\n    var codes = [[16384, \"vLayout\", SMUSHING], [8192, \"vLayout\", FITTING], [4096, \"vRule5\", true], [2048, \"vRule4\", true], [1024, \"vRule3\", true], [512, \"vRule2\", true], [256, \"vRule1\", true], [128, \"hLayout\", SMUSHING], [64, \"hLayout\", FITTING], [32, \"hRule6\", true], [16, \"hRule5\", true], [8, \"hRule4\", true], [4, \"hRule3\", true], [2, \"hRule2\", true], [1, \"hRule1\", true]];\n    val = newLayout !== null ? newLayout : oldLayout;\n    index = 0;\n    len = codes.length;\n\n    while (index < len) {\n      code = codes[index];\n\n      if (val >= code[0]) {\n        val = val - code[0];\n        rules[code[1]] = typeof rules[code[1]] === \"undefined\" ? code[2] : rules[code[1]];\n      } else if (code[1] !== \"vLayout\" && code[1] !== \"hLayout\") {\n        rules[code[1]] = false;\n      }\n\n      index++;\n    }\n\n    if (typeof rules[\"hLayout\"] === \"undefined\") {\n      if (oldLayout === 0) {\n        rules[\"hLayout\"] = FITTING;\n      } else if (oldLayout === -1) {\n        rules[\"hLayout\"] = FULL_WIDTH;\n      } else {\n        if (rules[\"hRule1\"] || rules[\"hRule2\"] || rules[\"hRule3\"] || rules[\"hRule4\"] || rules[\"hRule5\"] || rules[\"hRule6\"]) {\n          rules[\"hLayout\"] = CONTROLLED_SMUSHING;\n        } else {\n          rules[\"hLayout\"] = SMUSHING;\n        }\n      }\n    } else if (rules[\"hLayout\"] === SMUSHING) {\n      if (rules[\"hRule1\"] || rules[\"hRule2\"] || rules[\"hRule3\"] || rules[\"hRule4\"] || rules[\"hRule5\"] || rules[\"hRule6\"]) {\n        rules[\"hLayout\"] = CONTROLLED_SMUSHING;\n      }\n    }\n\n    if (typeof rules[\"vLayout\"] === \"undefined\") {\n      if (rules[\"vRule1\"] || rules[\"vRule2\"] || rules[\"vRule3\"] || rules[\"vRule4\"] || rules[\"vRule5\"]) {\n        rules[\"vLayout\"] = CONTROLLED_SMUSHING;\n      } else {\n        rules[\"vLayout\"] = FULL_WIDTH;\n      }\n    } else if (rules[\"vLayout\"] === SMUSHING) {\n      if (rules[\"vRule1\"] || rules[\"vRule2\"] || rules[\"vRule3\"] || rules[\"vRule4\"] || rules[\"vRule5\"]) {\n        rules[\"vLayout\"] = CONTROLLED_SMUSHING;\n      }\n    }\n\n    return rules;\n  }\n  /* The [vh]Rule[1-6]_Smush functions return the smushed character OR false if the two characters can't be smushed */\n\n  /*\n      Rule 1: EQUAL CHARACTER SMUSHING (code value 1)\n           Two sub-characters are smushed into a single sub-character\n          if they are the same.  This rule does not smush\n          hardblanks.  (See rule 6 on hardblanks below)\n  */\n\n\n  function hRule1_Smush(ch1, ch2, hardBlank) {\n    if (ch1 === ch2 && ch1 !== hardBlank) {\n      return ch1;\n    }\n\n    return false;\n  }\n  /*\n      Rule 2: UNDERSCORE SMUSHING (code value 2)\n           An underscore (\"_\") will be replaced by any of: \"|\", \"/\",\n          \"\\\", \"[\", \"]\", \"{\", \"}\", \"(\", \")\", \"<\" or \">\".\n  */\n\n\n  function hRule2_Smush(ch1, ch2) {\n    var rule2Str = \"|/\\\\[]{}()<>\";\n\n    if (ch1 === \"_\") {\n      if (rule2Str.indexOf(ch2) !== -1) {\n        return ch2;\n      }\n    } else if (ch2 === \"_\") {\n      if (rule2Str.indexOf(ch1) !== -1) {\n        return ch1;\n      }\n    }\n\n    return false;\n  }\n  /*\n      Rule 3: HIERARCHY SMUSHING (code value 4)\n           A hierarchy of six classes is used: \"|\", \"/\\\", \"[]\", \"{}\",\n          \"()\", and \"<>\".  When two smushing sub-characters are\n          from different classes, the one from the latter class\n          will be used.\n  */\n\n\n  function hRule3_Smush(ch1, ch2) {\n    var rule3Classes = \"| /\\\\ [] {} () <>\";\n    var r3_pos1 = rule3Classes.indexOf(ch1);\n    var r3_pos2 = rule3Classes.indexOf(ch2);\n\n    if (r3_pos1 !== -1 && r3_pos2 !== -1) {\n      if (r3_pos1 !== r3_pos2 && Math.abs(r3_pos1 - r3_pos2) !== 1) {\n        return rule3Classes.substr(Math.max(r3_pos1, r3_pos2), 1);\n      }\n    }\n\n    return false;\n  }\n  /*\n      Rule 4: OPPOSITE PAIR SMUSHING (code value 8)\n           Smushes opposing brackets (\"[]\" or \"][\"), braces (\"{}\" or\n          \"}{\") and parentheses (\"()\" or \")(\") together, replacing\n          any such pair with a vertical bar (\"|\").\n  */\n\n\n  function hRule4_Smush(ch1, ch2) {\n    var rule4Str = \"[] {} ()\";\n    var r4_pos1 = rule4Str.indexOf(ch1);\n    var r4_pos2 = rule4Str.indexOf(ch2);\n\n    if (r4_pos1 !== -1 && r4_pos2 !== -1) {\n      if (Math.abs(r4_pos1 - r4_pos2) <= 1) {\n        return \"|\";\n      }\n    }\n\n    return false;\n  }\n  /*\n      Rule 5: BIG X SMUSHING (code value 16)\n           Smushes \"/\\\" into \"|\", \"\\/\" into \"Y\", and \"><\" into \"X\".\n          Note that \"<>\" is not smushed in any way by this rule.\n          The name \"BIG X\" is historical; originally all three pairs\n          were smushed into \"X\".\n  */\n\n\n  function hRule5_Smush(ch1, ch2) {\n    var rule5Str = \"/\\\\ \\\\/ ><\";\n    var rule5Hash = {\n      \"0\": \"|\",\n      \"3\": \"Y\",\n      \"6\": \"X\"\n    };\n    var r5_pos1 = rule5Str.indexOf(ch1);\n    var r5_pos2 = rule5Str.indexOf(ch2);\n\n    if (r5_pos1 !== -1 && r5_pos2 !== -1) {\n      if (r5_pos2 - r5_pos1 === 1) {\n        return rule5Hash[r5_pos1];\n      }\n    }\n\n    return false;\n  }\n  /*\n      Rule 6: HARDBLANK SMUSHING (code value 32)\n           Smushes two hardblanks together, replacing them with a\n          single hardblank.  (See \"Hardblanks\" below.)\n  */\n\n\n  function hRule6_Smush(ch1, ch2, hardBlank) {\n    if (ch1 === hardBlank && ch2 === hardBlank) {\n      return hardBlank;\n    }\n\n    return false;\n  }\n  /*\n      Rule 1: EQUAL CHARACTER SMUSHING (code value 256)\n           Same as horizontal smushing rule 1.\n  */\n\n\n  function vRule1_Smush(ch1, ch2) {\n    if (ch1 === ch2) {\n      return ch1;\n    }\n\n    return false;\n  }\n  /*\n      Rule 2: UNDERSCORE SMUSHING (code value 512)\n           Same as horizontal smushing rule 2.\n  */\n\n\n  function vRule2_Smush(ch1, ch2) {\n    var rule2Str = \"|/\\\\[]{}()<>\";\n\n    if (ch1 === \"_\") {\n      if (rule2Str.indexOf(ch2) !== -1) {\n        return ch2;\n      }\n    } else if (ch2 === \"_\") {\n      if (rule2Str.indexOf(ch1) !== -1) {\n        return ch1;\n      }\n    }\n\n    return false;\n  }\n  /*\n      Rule 3: HIERARCHY SMUSHING (code value 1024)\n           Same as horizontal smushing rule 3.\n  */\n\n\n  function vRule3_Smush(ch1, ch2) {\n    var rule3Classes = \"| /\\\\ [] {} () <>\";\n    var r3_pos1 = rule3Classes.indexOf(ch1);\n    var r3_pos2 = rule3Classes.indexOf(ch2);\n\n    if (r3_pos1 !== -1 && r3_pos2 !== -1) {\n      if (r3_pos1 !== r3_pos2 && Math.abs(r3_pos1 - r3_pos2) !== 1) {\n        return rule3Classes.substr(Math.max(r3_pos1, r3_pos2), 1);\n      }\n    }\n\n    return false;\n  }\n  /*\n      Rule 4: HORIZONTAL LINE SMUSHING (code value 2048)\n           Smushes stacked pairs of \"-\" and \"_\", replacing them with\n          a single \"=\" sub-character.  It does not matter which is\n          found above the other.  Note that vertical smushing rule 1\n          will smush IDENTICAL pairs of horizontal lines, while this\n          rule smushes horizontal lines consisting of DIFFERENT\n          sub-characters.\n  */\n\n\n  function vRule4_Smush(ch1, ch2) {\n    if (ch1 === \"-\" && ch2 === \"_\" || ch1 === \"_\" && ch2 === \"-\") {\n      return \"=\";\n    }\n\n    return false;\n  }\n  /*\n      Rule 5: VERTICAL LINE SUPERSMUSHING (code value 4096)\n           This one rule is different from all others, in that it\n          \"supersmushes\" vertical lines consisting of several\n          vertical bars (\"|\").  This creates the illusion that\n          FIGcharacters have slid vertically against each other.\n          Supersmushing continues until any sub-characters other\n          than \"|\" would have to be smushed.  Supersmushing can\n          produce impressive results, but it is seldom possible,\n          since other sub-characters would usually have to be\n          considered for smushing as soon as any such stacked\n          vertical lines are encountered.\n  */\n\n\n  function vRule5_Smush(ch1, ch2) {\n    if (ch1 === \"|\" && ch2 === \"|\") {\n      return \"|\";\n    }\n\n    return false;\n  }\n  /*\n      Universal smushing simply overrides the sub-character from the\n      earlier FIGcharacter with the sub-character from the later\n      FIGcharacter.  This produces an \"overlapping\" effect with some\n      FIGfonts, wherin the latter FIGcharacter may appear to be \"in\n      front\".\n  */\n\n\n  function uni_Smush(ch1, ch2, hardBlank) {\n    if (ch2 === \" \" || ch2 === \"\") {\n      return ch1;\n    } else if (ch2 === hardBlank && ch1 !== \" \") {\n      return ch1;\n    } else {\n      return ch2;\n    }\n  } // --------------------------------------------------------------------------\n  // main vertical smush routines (excluding rules)\n\n  /*\n      txt1 - A line of text\n      txt2 - A line of text\n      opts - FIGlet options array\n       About: Takes in two lines of text and returns one of the following:\n      \"valid\" - These lines can be smushed together given the current smushing rules\n      \"end\" - The lines can be smushed, but we're at a stopping point\n      \"invalid\" - The two lines cannot be smushed together\n  */\n\n\n  function canVerticalSmush(txt1, txt2, opts) {\n    if (opts.fittingRules.vLayout === FULL_WIDTH) {\n      return \"invalid\";\n    }\n\n    var ii,\n        len = Math.min(txt1.length, txt2.length);\n    var ch1,\n        ch2,\n        endSmush = false,\n        validSmush;\n\n    if (len === 0) {\n      return \"invalid\";\n    }\n\n    for (ii = 0; ii < len; ii++) {\n      ch1 = txt1.substr(ii, 1);\n      ch2 = txt2.substr(ii, 1);\n\n      if (ch1 !== \" \" && ch2 !== \" \") {\n        if (opts.fittingRules.vLayout === FITTING) {\n          return \"invalid\";\n        } else if (opts.fittingRules.vLayout === SMUSHING) {\n          return \"end\";\n        } else {\n          if (vRule5_Smush(ch1, ch2)) {\n            endSmush = endSmush || false;\n            continue;\n          } // rule 5 allow for \"super\" smushing, but only if we're not already ending this smush\n\n\n          validSmush = false;\n          validSmush = opts.fittingRules.vRule1 ? vRule1_Smush(ch1, ch2) : validSmush;\n          validSmush = !validSmush && opts.fittingRules.vRule2 ? vRule2_Smush(ch1, ch2) : validSmush;\n          validSmush = !validSmush && opts.fittingRules.vRule3 ? vRule3_Smush(ch1, ch2) : validSmush;\n          validSmush = !validSmush && opts.fittingRules.vRule4 ? vRule4_Smush(ch1, ch2) : validSmush;\n          endSmush = true;\n\n          if (!validSmush) {\n            return \"invalid\";\n          }\n        }\n      }\n    }\n\n    if (endSmush) {\n      return \"end\";\n    } else {\n      return \"valid\";\n    }\n  }\n\n  function getVerticalSmushDist(lines1, lines2, opts) {\n    var maxDist = lines1.length;\n    var len1 = lines1.length;\n    var len2 = lines2.length;\n    var subLines1, subLines2, slen;\n    var curDist = 1;\n    var ii, ret, result;\n\n    while (curDist <= maxDist) {\n      subLines1 = lines1.slice(Math.max(0, len1 - curDist), len1);\n      subLines2 = lines2.slice(0, Math.min(maxDist, curDist));\n      slen = subLines2.length; //TODO:check this\n\n      result = \"\";\n\n      for (ii = 0; ii < slen; ii++) {\n        ret = canVerticalSmush(subLines1[ii], subLines2[ii], opts);\n\n        if (ret === \"end\") {\n          result = ret;\n        } else if (ret === \"invalid\") {\n          result = ret;\n          break;\n        } else {\n          if (result === \"\") {\n            result = \"valid\";\n          }\n        }\n      }\n\n      if (result === \"invalid\") {\n        curDist--;\n        break;\n      }\n\n      if (result === \"end\") {\n        break;\n      }\n\n      if (result === \"valid\") {\n        curDist++;\n      }\n    }\n\n    return Math.min(maxDist, curDist);\n  }\n\n  function verticallySmushLines(line1, line2, opts) {\n    var ii,\n        len = Math.min(line1.length, line2.length);\n    var ch1,\n        ch2,\n        result = \"\",\n        validSmush;\n\n    for (ii = 0; ii < len; ii++) {\n      ch1 = line1.substr(ii, 1);\n      ch2 = line2.substr(ii, 1);\n\n      if (ch1 !== \" \" && ch2 !== \" \") {\n        if (opts.fittingRules.vLayout === FITTING) {\n          result += uni_Smush(ch1, ch2);\n        } else if (opts.fittingRules.vLayout === SMUSHING) {\n          result += uni_Smush(ch1, ch2);\n        } else {\n          validSmush = opts.fittingRules.vRule5 ? vRule5_Smush(ch1, ch2) : validSmush;\n          validSmush = !validSmush && opts.fittingRules.vRule1 ? vRule1_Smush(ch1, ch2) : validSmush;\n          validSmush = !validSmush && opts.fittingRules.vRule2 ? vRule2_Smush(ch1, ch2) : validSmush;\n          validSmush = !validSmush && opts.fittingRules.vRule3 ? vRule3_Smush(ch1, ch2) : validSmush;\n          validSmush = !validSmush && opts.fittingRules.vRule4 ? vRule4_Smush(ch1, ch2) : validSmush;\n          result += validSmush;\n        }\n      } else {\n        result += uni_Smush(ch1, ch2);\n      }\n    }\n\n    return result;\n  }\n\n  function verticalSmush(lines1, lines2, overlap, opts) {\n    var len1 = lines1.length;\n    var len2 = lines2.length;\n    var piece1 = lines1.slice(0, Math.max(0, len1 - overlap));\n    var piece2_1 = lines1.slice(Math.max(0, len1 - overlap), len1);\n    var piece2_2 = lines2.slice(0, Math.min(overlap, len2));\n    var ii,\n        len,\n        line,\n        piece2 = [],\n        piece3,\n        result = [];\n    len = piece2_1.length;\n\n    for (ii = 0; ii < len; ii++) {\n      if (ii >= len2) {\n        line = piece2_1[ii];\n      } else {\n        line = verticallySmushLines(piece2_1[ii], piece2_2[ii], opts);\n      }\n\n      piece2.push(line);\n    }\n\n    piece3 = lines2.slice(Math.min(overlap, len2), len2);\n    return result.concat(piece1, piece2, piece3);\n  }\n\n  function padLines(lines, numSpaces) {\n    var ii,\n        len = lines.length,\n        padding = \"\";\n\n    for (ii = 0; ii < numSpaces; ii++) {\n      padding += \" \";\n    }\n\n    for (ii = 0; ii < len; ii++) {\n      lines[ii] += padding;\n    }\n  }\n\n  function smushVerticalFigLines(output, lines, opts) {\n    var len1 = output[0].length;\n    var len2 = lines[0].length;\n    var overlap;\n\n    if (len1 > len2) {\n      padLines(lines, len1 - len2);\n    } else if (len2 > len1) {\n      padLines(output, len2 - len1);\n    }\n\n    overlap = getVerticalSmushDist(output, lines, opts);\n    return verticalSmush(output, lines, overlap, opts);\n  } // -------------------------------------------------------------------------\n  // Main horizontal smush routines (excluding rules)\n\n\n  function getHorizontalSmushLength(txt1, txt2, opts) {\n    if (opts.fittingRules.hLayout === FULL_WIDTH) {\n      return 0;\n    }\n\n    var ii,\n        len1 = txt1.length,\n        len2 = txt2.length;\n    var maxDist = len1;\n    var curDist = 1;\n    var breakAfter = false;\n    var validSmush = false;\n    var seg1, seg2, ch1, ch2;\n\n    if (len1 === 0) {\n      return 0;\n    }\n\n    distCal: while (curDist <= maxDist) {\n      seg1 = txt1.substr(len1 - curDist, curDist);\n      seg2 = txt2.substr(0, Math.min(curDist, len2));\n\n      for (ii = 0; ii < Math.min(curDist, len2); ii++) {\n        ch1 = seg1.substr(ii, 1);\n        ch2 = seg2.substr(ii, 1);\n\n        if (ch1 !== \" \" && ch2 !== \" \") {\n          if (opts.fittingRules.hLayout === FITTING) {\n            curDist = curDist - 1;\n            break distCal;\n          } else if (opts.fittingRules.hLayout === SMUSHING) {\n            if (ch1 === opts.hardBlank || ch2 === opts.hardBlank) {\n              curDist = curDist - 1; // universal smushing does not smush hardblanks\n            }\n\n            break distCal;\n          } else {\n            breakAfter = true; // we know we need to break, but we need to check if our smushing rules will allow us to smush the overlapped characters\n\n            validSmush = false; // the below checks will let us know if we can smush these characters\n\n            validSmush = opts.fittingRules.hRule1 ? hRule1_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n            validSmush = !validSmush && opts.fittingRules.hRule2 ? hRule2_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n            validSmush = !validSmush && opts.fittingRules.hRule3 ? hRule3_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n            validSmush = !validSmush && opts.fittingRules.hRule4 ? hRule4_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n            validSmush = !validSmush && opts.fittingRules.hRule5 ? hRule5_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n            validSmush = !validSmush && opts.fittingRules.hRule6 ? hRule6_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n\n            if (!validSmush) {\n              curDist = curDist - 1;\n              break distCal;\n            }\n          }\n        }\n      }\n\n      if (breakAfter) {\n        break;\n      }\n\n      curDist++;\n    }\n\n    return Math.min(maxDist, curDist);\n  }\n\n  function horizontalSmush(textBlock1, textBlock2, overlap, opts) {\n    var ii,\n        jj,\n        ch,\n        outputFig = [],\n        overlapStart,\n        piece1,\n        piece2,\n        piece3,\n        len1,\n        len2,\n        txt1,\n        txt2;\n\n    for (ii = 0; ii < opts.height; ii++) {\n      txt1 = textBlock1[ii];\n      txt2 = textBlock2[ii];\n      len1 = txt1.length;\n      len2 = txt2.length;\n      overlapStart = len1 - overlap;\n      piece1 = txt1.substr(0, Math.max(0, overlapStart));\n      piece2 = \"\"; // determine overlap piece\n\n      var seg1 = txt1.substr(Math.max(0, len1 - overlap), overlap);\n      var seg2 = txt2.substr(0, Math.min(overlap, len2));\n\n      for (jj = 0; jj < overlap; jj++) {\n        var ch1 = jj < len1 ? seg1.substr(jj, 1) : \" \";\n        var ch2 = jj < len2 ? seg2.substr(jj, 1) : \" \";\n\n        if (ch1 !== \" \" && ch2 !== \" \") {\n          if (opts.fittingRules.hLayout === FITTING) {\n            piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n          } else if (opts.fittingRules.hLayout === SMUSHING) {\n            piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n          } else {\n            // Controlled Smushing\n            var nextCh = \"\";\n            nextCh = !nextCh && opts.fittingRules.hRule1 ? hRule1_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n            nextCh = !nextCh && opts.fittingRules.hRule2 ? hRule2_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n            nextCh = !nextCh && opts.fittingRules.hRule3 ? hRule3_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n            nextCh = !nextCh && opts.fittingRules.hRule4 ? hRule4_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n            nextCh = !nextCh && opts.fittingRules.hRule5 ? hRule5_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n            nextCh = !nextCh && opts.fittingRules.hRule6 ? hRule6_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n            nextCh = nextCh || uni_Smush(ch1, ch2, opts.hardBlank);\n            piece2 += nextCh;\n          }\n        } else {\n          piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n        }\n      }\n\n      if (overlap >= len2) {\n        piece3 = \"\";\n      } else {\n        piece3 = txt2.substr(overlap, Math.max(0, len2 - overlap));\n      }\n\n      outputFig[ii] = piece1 + piece2 + piece3;\n    }\n\n    return outputFig;\n  }\n  /*\n      Creates new empty ASCII placeholder of give len\n      - len - number\n  */\n\n\n  function newFigChar(len) {\n    var outputFigText = [],\n        row;\n\n    for (row = 0; row < len; row++) {\n      outputFigText[row] = \"\";\n    }\n\n    return outputFigText;\n  }\n  /*\n     join words or single characaters into single Fig line\n     - array - array of ASCII words or single characters: {fig: array, overlap: number}\n     - len - height of the Characters (number of rows)\n     - opt - options object\n  */\n\n\n  function joinFigArray(array, len, opts) {\n    return array.reduce(function (acc, data) {\n      return horizontalSmush(acc, data.fig, data.overlap, opts);\n    }, newFigChar(len));\n  }\n  /*\n     break long word return leftover characters and line before the break\n     - figChars - list of single ASCII characters in form {fig, overlap}\n     - len - number of rows\n     - opt - options object\n  */\n\n\n  function breakWord(figChars, len, opts) {\n    var result = {};\n\n    for (var i = figChars.length; --i;) {\n      var w = joinFigArray(figChars.slice(0, i), len, opts);\n\n      if (figLinesWidth(w) <= opts.width) {\n        result.outputFigText = w;\n\n        if (i < figChars.length) {\n          result.chars = figChars.slice(i);\n        } else {\n          result.chars = [];\n        }\n\n        break;\n      }\n    }\n\n    return result;\n  }\n\n  function generateFigTextLines(txt, figChars, opts) {\n    var charIndex,\n        figChar,\n        spaceIndex,\n        overlap = 0,\n        row,\n        outputFigText,\n        len,\n        height = opts.height,\n        outputFigLines = [],\n        maxWidth,\n        prevWidth,\n        nextFigChars,\n        figWords = [],\n        _char,\n        isSpace,\n        textFigWord,\n        textFigLine,\n        tmpBreak;\n\n    outputFigText = newFigChar(height);\n\n    if (opts.width > 0 && opts.whitespaceBreak) {\n      // list of characters is used to break in the middle of the word when word is logner\n      // chars is array of characters with {fig, overlap} and overlap is for whole word\n      nextFigChars = {\n        chars: [],\n        overlap: overlap\n      };\n    }\n\n    if (opts.printDirection === 1) {\n      txt = txt.split('').reverse().join('');\n    }\n\n    len = txt.length;\n\n    for (charIndex = 0; charIndex < len; charIndex++) {\n      _char = txt.substr(charIndex, 1);\n      isSpace = _char.match(/\\s/);\n      figChar = figChars[_char.charCodeAt(0)];\n      textFigLine = null;\n\n      if (figChar) {\n        if (opts.fittingRules.hLayout !== FULL_WIDTH) {\n          overlap = 10000; // a value too high to be the overlap\n\n          for (row = 0; row < opts.height; row++) {\n            overlap = Math.min(overlap, getHorizontalSmushLength(outputFigText[row], figChar[row], opts));\n          }\n\n          overlap = overlap === 10000 ? 0 : overlap;\n        }\n\n        if (opts.width > 0) {\n          if (opts.whitespaceBreak) {\n            // next character in last word (figChars have same data as words)\n            textFigWord = joinFigArray(nextFigChars.chars.concat([{\n              fig: figChar,\n              overlap: overlap\n            }]), height, opts);\n            textFigLine = joinFigArray(figWords.concat([{\n              fig: textFigWord,\n              overlap: nextFigChars.overlap\n            }]), height, opts);\n            maxWidth = figLinesWidth(textFigLine);\n          } else {\n            textFigLine = horizontalSmush(outputFigText, figChar, overlap, opts);\n            maxWidth = figLinesWidth(textFigLine);\n          }\n\n          if (maxWidth >= opts.width && charIndex > 0) {\n            if (opts.whitespaceBreak) {\n              outputFigText = joinFigArray(figWords.slice(0, -1), height, opts);\n\n              if (figWords.length > 1) {\n                outputFigLines.push(outputFigText);\n                outputFigText = newFigChar(height);\n              }\n\n              figWords = [];\n            } else {\n              outputFigLines.push(outputFigText);\n              outputFigText = newFigChar(height);\n            }\n          }\n        }\n\n        if (opts.width > 0 && opts.whitespaceBreak) {\n          if (!isSpace || charIndex === len - 1) {\n            nextFigChars.chars.push({\n              fig: figChar,\n              overlap: overlap\n            });\n          }\n\n          if (isSpace || charIndex === len - 1) {\n            // break long words\n            tmpBreak = null;\n\n            while (true) {\n              textFigLine = joinFigArray(nextFigChars.chars, height, opts);\n              maxWidth = figLinesWidth(textFigLine);\n\n              if (maxWidth >= opts.width) {\n                tmpBreak = breakWord(nextFigChars.chars, height, opts);\n                nextFigChars = {\n                  chars: tmpBreak.chars\n                };\n                outputFigLines.push(tmpBreak.outputFigText);\n              } else {\n                break;\n              }\n            } // any leftovers\n\n\n            if (maxWidth > 0) {\n              if (tmpBreak) {\n                figWords.push({\n                  fig: textFigLine,\n                  overlap: 1\n                });\n              } else {\n                figWords.push({\n                  fig: textFigLine,\n                  overlap: nextFigChars.overlap\n                });\n              }\n            } // save space character and current overlap for smush in joinFigWords\n\n\n            if (isSpace) {\n              figWords.push({\n                fig: figChar,\n                overlap: overlap\n              });\n              outputFigText = newFigChar(height);\n            }\n\n            if (charIndex === len - 1) {\n              // last line\n              outputFigText = joinFigArray(figWords, height, opts);\n            }\n\n            nextFigChars = {\n              chars: [],\n              overlap: overlap\n            };\n            continue;\n          }\n        }\n\n        outputFigText = horizontalSmush(outputFigText, figChar, overlap, opts);\n      }\n    } // special case when last line would be empty\n    // this may happen if text fit exactly opt.width\n\n\n    if (figLinesWidth(outputFigText) > 0) {\n      outputFigLines.push(outputFigText);\n    } // remove hardblanks\n\n\n    if (opts.showHardBlanks !== true) {\n      outputFigLines.forEach(function (outputFigText) {\n        len = outputFigText.length;\n\n        for (row = 0; row < len; row++) {\n          outputFigText[row] = outputFigText[row].replace(new RegExp(\"\\\\\" + opts.hardBlank, \"g\"), \" \");\n        }\n      });\n    }\n\n    return outputFigLines;\n  } // -------------------------------------------------------------------------\n  // Parsing and Generation methods\n\n\n  var getHorizontalFittingRules = function getHorizontalFittingRules(layout, options) {\n    var props = [\"hLayout\", \"hRule1\", \"hRule2\", \"hRule3\", \"hRule4\", \"hRule5\", \"hRule6\"],\n        params = {},\n        prop,\n        ii;\n\n    if (layout === \"default\") {\n      for (ii = 0; ii < props.length; ii++) {\n        params[props[ii]] = options.fittingRules[props[ii]];\n      }\n    } else if (layout === \"full\") {\n      params = {\n        \"hLayout\": FULL_WIDTH,\n        \"hRule1\": false,\n        \"hRule2\": false,\n        \"hRule3\": false,\n        \"hRule4\": false,\n        \"hRule5\": false,\n        \"hRule6\": false\n      };\n    } else if (layout === \"fitted\") {\n      params = {\n        \"hLayout\": FITTING,\n        \"hRule1\": false,\n        \"hRule2\": false,\n        \"hRule3\": false,\n        \"hRule4\": false,\n        \"hRule5\": false,\n        \"hRule6\": false\n      };\n    } else if (layout === \"controlled smushing\") {\n      params = {\n        \"hLayout\": CONTROLLED_SMUSHING,\n        \"hRule1\": true,\n        \"hRule2\": true,\n        \"hRule3\": true,\n        \"hRule4\": true,\n        \"hRule5\": true,\n        \"hRule6\": true\n      };\n    } else if (layout === \"universal smushing\") {\n      params = {\n        \"hLayout\": SMUSHING,\n        \"hRule1\": false,\n        \"hRule2\": false,\n        \"hRule3\": false,\n        \"hRule4\": false,\n        \"hRule5\": false,\n        \"hRule6\": false\n      };\n    } else {\n      return;\n    }\n\n    return params;\n  };\n\n  var getVerticalFittingRules = function getVerticalFittingRules(layout, options) {\n    var props = [\"vLayout\", \"vRule1\", \"vRule2\", \"vRule3\", \"vRule4\", \"vRule5\"],\n        params = {},\n        prop,\n        ii;\n\n    if (layout === \"default\") {\n      for (ii = 0; ii < props.length; ii++) {\n        params[props[ii]] = options.fittingRules[props[ii]];\n      }\n    } else if (layout === \"full\") {\n      params = {\n        \"vLayout\": FULL_WIDTH,\n        \"vRule1\": false,\n        \"vRule2\": false,\n        \"vRule3\": false,\n        \"vRule4\": false,\n        \"vRule5\": false\n      };\n    } else if (layout === \"fitted\") {\n      params = {\n        \"vLayout\": FITTING,\n        \"vRule1\": false,\n        \"vRule2\": false,\n        \"vRule3\": false,\n        \"vRule4\": false,\n        \"vRule5\": false\n      };\n    } else if (layout === \"controlled smushing\") {\n      params = {\n        \"vLayout\": CONTROLLED_SMUSHING,\n        \"vRule1\": true,\n        \"vRule2\": true,\n        \"vRule3\": true,\n        \"vRule4\": true,\n        \"vRule5\": true\n      };\n    } else if (layout === \"universal smushing\") {\n      params = {\n        \"vLayout\": SMUSHING,\n        \"vRule1\": false,\n        \"vRule2\": false,\n        \"vRule3\": false,\n        \"vRule4\": false,\n        \"vRule5\": false\n      };\n    } else {\n      return;\n    }\n\n    return params;\n  };\n  /*\n      Return max line of the ASCII Art\n      - text is array of lines for text\n      - char is next character\n   */\n\n\n  var figLinesWidth = function figLinesWidth(textLines) {\n    return Math.max.apply(Math, textLines.map(function (line, i) {\n      return line.length;\n    }));\n  };\n  /*\n      Generates the ASCII Art\n      - fontName: Font to use\n      - option: Options to override the defaults\n      - txt: The text to make into ASCII Art\n  */\n\n\n  var generateText = function generateText(fontName, options, txt) {\n    txt = txt.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n    var lines = txt.split(\"\\n\");\n    var figLines = [];\n    var ii, len, output;\n    len = lines.length;\n\n    for (ii = 0; ii < len; ii++) {\n      figLines = figLines.concat(generateFigTextLines(lines[ii], figFonts[fontName], options));\n    }\n\n    len = figLines.length;\n    output = figLines[0];\n\n    for (ii = 1; ii < len; ii++) {\n      output = smushVerticalFigLines(output, figLines[ii], options);\n    }\n\n    return output ? output.join(\"\\n\") : '';\n  }; // -------------------------------------------------------------------------\n  // Public methods\n\n  /*\n      A short-cut for the figlet.text method\n       Parameters:\n      - txt (string): The text to make into ASCII Art\n      - options (object/string - optional): Options that will override the current font's default options.\n        If a string is provided instead of an object, it is assumed to be the font name.\n           * font\n          * horizontalLayout\n          * verticalLayout\n          * showHardBlanks - Wont remove hardblank characters\n       - next (function): A callback function, it will contained the outputted ASCII Art.\n  */\n\n\n  var me = function me(txt, options, next) {\n    me.text(txt, options, next);\n  };\n\n  me.text = function (txt, options, next) {\n    var fontName = ''; // Validate inputs\n\n    txt = txt + '';\n\n    if (typeof arguments[1] === 'function') {\n      next = options;\n      options = {};\n      options.font = figDefaults.font; // default font\n    }\n\n    if (typeof options === 'string') {\n      fontName = options;\n      options = {};\n    } else {\n      options = options || {};\n      fontName = options.font || figDefaults.font;\n    }\n    /*\n        Load the font. If it loads, it's data will be contained in the figFonts object.\n        The callback will recieve a fontsOpts object, which contains the default\n        options of the font (its fitting rules, etc etc).\n    */\n\n\n    me.loadFont(fontName, function (err, fontOpts) {\n      if (err) {\n        return next(err);\n      }\n\n      next(null, generateText(fontName, _reworkFontOpts(fontOpts, options), txt));\n    });\n  };\n  /*\n      Synchronous version of figlet.text.\n      Accepts the same parameters.\n   */\n\n\n  me.textSync = function (txt, options) {\n    var fontName = ''; // Validate inputs\n\n    txt = txt + '';\n\n    if (typeof options === 'string') {\n      fontName = options;\n      options = {};\n    } else {\n      options = options || {};\n      fontName = options.font || figDefaults.font;\n    }\n\n    var fontOpts = _reworkFontOpts(me.loadFontSync(fontName), options);\n\n    return generateText(fontName, fontOpts, txt);\n  };\n  /*\n    takes assigned options and merges them with the default options from the choosen font\n   */\n\n\n  function _reworkFontOpts(fontOpts, options) {\n    var myOpts = JSON.parse(JSON.stringify(fontOpts)),\n        // make a copy because we may edit this (see below)\n    params,\n        prop;\n    /*\n     If the user is chosing to use a specific type of layout (e.g., 'full', 'fitted', etc etc)\n     Then we need to override the default font options.\n     */\n\n    if (typeof options.horizontalLayout !== 'undefined') {\n      params = getHorizontalFittingRules(options.horizontalLayout, fontOpts);\n\n      for (prop in params) {\n        myOpts.fittingRules[prop] = params[prop];\n      }\n    }\n\n    if (typeof options.verticalLayout !== 'undefined') {\n      params = getVerticalFittingRules(options.verticalLayout, fontOpts);\n\n      for (prop in params) {\n        myOpts.fittingRules[prop] = params[prop];\n      }\n    }\n\n    myOpts.printDirection = typeof options.printDirection !== 'undefined' ? options.printDirection : fontOpts.printDirection;\n    myOpts.showHardBlanks = options.showHardBlanks || false;\n    myOpts.width = options.width || -1;\n    myOpts.whitespaceBreak = options.whitespaceBreak || false;\n    return myOpts;\n  }\n  /*\n      Returns metadata about a specfic FIGlet font.\n       Returns:\n          next(err, options, headerComment)\n          - err: The error if an error occurred, otherwise null/falsey.\n          - options (object): The options defined for the font.\n          - headerComment (string): The font's header comment.\n  */\n\n\n  me.metadata = function (fontName, next) {\n    fontName = fontName + '';\n    /*\n        Load the font. If it loads, it's data will be contained in the figFonts object.\n        The callback will recieve a fontsOpts object, which contains the default\n        options of the font (its fitting rules, etc etc).\n    */\n\n    me.loadFont(fontName, function (err, fontOpts) {\n      if (err) {\n        next(err);\n        return;\n      }\n\n      next(null, fontOpts, figFonts[fontName].comment);\n    });\n  };\n  /*\n      Allows you to override defaults. See the definition of the figDefaults object up above\n      to see what properties can be overridden.\n      Returns the options for the font.\n  */\n\n\n  me.defaults = function (opts) {\n    if (typeof opts === 'object' && opts !== null) {\n      for (var prop in opts) {\n        if (opts.hasOwnProperty(prop)) {\n          figDefaults[prop] = opts[prop];\n        }\n      }\n    }\n\n    return JSON.parse(JSON.stringify(figDefaults));\n  };\n  /*\n      Parses data from a FIGlet font file and places it into the figFonts object.\n  */\n\n\n  me.parseFont = function (fontName, data) {\n    data = data.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n    figFonts[fontName] = {};\n    var lines = data.split(\"\\n\");\n    var headerData = lines.splice(0, 1)[0].split(\" \");\n    var figFont = figFonts[fontName];\n    var opts = {};\n    opts.hardBlank = headerData[0].substr(5, 1);\n    opts.height = parseInt(headerData[1], 10);\n    opts.baseline = parseInt(headerData[2], 10);\n    opts.maxLength = parseInt(headerData[3], 10);\n    opts.oldLayout = parseInt(headerData[4], 10);\n    opts.numCommentLines = parseInt(headerData[5], 10);\n    opts.printDirection = headerData.length >= 6 ? parseInt(headerData[6], 10) : 0;\n    opts.fullLayout = headerData.length >= 7 ? parseInt(headerData[7], 10) : null;\n    opts.codeTagCount = headerData.length >= 8 ? parseInt(headerData[8], 10) : null;\n    opts.fittingRules = getSmushingRules(opts.oldLayout, opts.fullLayout);\n    figFont.options = opts; // error check\n\n    if (opts.hardBlank.length !== 1 || isNaN(opts.height) || isNaN(opts.baseline) || isNaN(opts.maxLength) || isNaN(opts.oldLayout) || isNaN(opts.numCommentLines)) {\n      throw new Error('FIGlet header contains invalid values.');\n    }\n    /*\n        All FIGlet fonts must contain chars 32-126, 196, 214, 220, 228, 246, 252, 223\n    */\n\n\n    var charNums = [],\n        ii;\n\n    for (ii = 32; ii <= 126; ii++) {\n      charNums.push(ii);\n    }\n\n    charNums = charNums.concat(196, 214, 220, 228, 246, 252, 223); // error check - validate that there are enough lines in the file\n\n    if (lines.length < opts.numCommentLines + opts.height * charNums.length) {\n      throw new Error('FIGlet file is missing data.');\n    }\n    /*\n        Parse out the context of the file and put it into our figFont object\n    */\n\n\n    var cNum,\n        endCharRegEx,\n        parseError = false;\n    figFont.comment = lines.splice(0, opts.numCommentLines).join(\"\\n\");\n    figFont.numChars = 0;\n\n    while (lines.length > 0 && figFont.numChars < charNums.length) {\n      cNum = charNums[figFont.numChars];\n      figFont[cNum] = lines.splice(0, opts.height); // remove end sub-chars\n\n      for (ii = 0; ii < opts.height; ii++) {\n        if (typeof figFont[cNum][ii] === \"undefined\") {\n          figFont[cNum][ii] = \"\";\n        } else {\n          endCharRegEx = new RegExp(\"\\\\\" + figFont[cNum][ii].substr(figFont[cNum][ii].length - 1, 1) + \"+$\");\n          figFont[cNum][ii] = figFont[cNum][ii].replace(endCharRegEx, \"\");\n        }\n      }\n\n      figFont.numChars++;\n    }\n    /*\n        Now we check to see if any additional characters are present\n    */\n\n\n    while (lines.length > 0) {\n      cNum = lines.splice(0, 1)[0].split(\" \")[0];\n\n      if (/^0[xX][0-9a-fA-F]+$/.test(cNum)) {\n        cNum = parseInt(cNum, 16);\n      } else if (/^0[0-7]+$/.test(cNum)) {\n        cNum = parseInt(cNum, 8);\n      } else if (/^[0-9]+$/.test(cNum)) {\n        cNum = parseInt(cNum, 10);\n      } else if (/^-0[xX][0-9a-fA-F]+$/.test(cNum)) {\n        cNum = parseInt(cNum, 16);\n      } else {\n        if (cNum === \"\") {\n          break;\n        } // something's wrong\n\n\n        console.log(\"Invalid data:\" + cNum);\n        parseError = true;\n        break;\n      }\n\n      figFont[cNum] = lines.splice(0, opts.height); // remove end sub-chars\n\n      for (ii = 0; ii < opts.height; ii++) {\n        if (typeof figFont[cNum][ii] === \"undefined\") {\n          figFont[cNum][ii] = \"\";\n        } else {\n          endCharRegEx = new RegExp(\"\\\\\" + figFont[cNum][ii].substr(figFont[cNum][ii].length - 1, 1) + \"+$\");\n          figFont[cNum][ii] = figFont[cNum][ii].replace(endCharRegEx, \"\");\n        }\n      }\n\n      figFont.numChars++;\n    } // error check\n\n\n    if (parseError === true) {\n      throw new Error('Error parsing data.');\n    }\n\n    return opts;\n  };\n  /*\n      Loads a font.\n  */\n\n\n  me.loadFont = function (fontName, next) {\n    if (figFonts[fontName]) {\n      next(null, figFonts[fontName].options);\n      return;\n    }\n\n    if (typeof fetch !== 'function') {\n      console.error('figlet.js requires the fetch API or a fetch polyfill such as https://cdnjs.com/libraries/fetch');\n      throw new Error('fetch is required for figlet.js to work.');\n    }\n\n    fetch(figDefaults.fontPath + '/' + fontName + '.flf').then(function (response) {\n      if (response.ok) {\n        return response.text();\n      }\n\n      console.log('Unexpected response', response);\n      throw new Error('Network response was not ok.');\n    }).then(function (text) {\n      next(null, me.parseFont(fontName, text));\n    })[\"catch\"](next);\n  };\n  /*\n      loads a font synchronously, not implemented for the browser\n   */\n\n\n  me.loadFontSync = function (name) {\n    if (figFonts[name]) {\n      return figFonts[name].options;\n    }\n\n    throw new Error('synchronous font loading is not implemented for the browser');\n  };\n  /*\n      preloads a list of fonts prior to using textSync\n      - fonts: an array of font names (i.e. [\"Standard\",\"Soft\"])\n      - next: callback function\n   */\n\n\n  me.preloadFonts = function (fonts, next) {\n    var fontData = [];\n    fonts.reduce(function (promise, name) {\n      return promise.then(function () {\n        return fetch(figDefaults.fontPath + '/' + name + '.flf').then(function (response) {\n          return response.text();\n        }).then(function (data) {\n          fontData.push(data);\n        });\n      });\n    }, Promise.resolve()).then(function (res) {\n      for (var i in fonts) {\n        me.parseFont(fonts[i], fontData[i]);\n      }\n\n      if (next) next();\n    });\n  };\n\n  me.figFonts = figFonts;\n  return me;\n}(); // for node.js\n\n\nif (typeof module !== 'undefined') {\n  if (typeof module.exports !== 'undefined') {\n    module.exports = figlet;\n  }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"figlet-logo\":\"styles-module--figlet-logo--104LW\",\"figletLogo\":\"styles-module--figlet-logo--104LW\",\"hero\":\"styles-module--hero--31Lpb\",\"terminal\":\"styles-module--terminal--1ssOv\",\"content\":\"styles-module--content--9kmdu\",\"green\":\"styles-module--green--3BluK\",\"blue\":\"styles-module--blue--2AB6o\",\"tag-line\":\"styles-module--tag-line--3I2Sd\",\"tagLine\":\"styles-module--tag-line--3I2Sd\",\"commands\":\"styles-module--commands--2Plgy\",\"buttons\":\"styles-module--buttons--3-drp\",\"close\":\"styles-module--close--33SEF\",\"minimize\":\"styles-module--minimize--1QZaz\",\"cascade\":\"styles-module--cascade--1Qbbs\",\"introduction\":\"styles-module--introduction--30NYC\",\"data-analysis\":\"styles-module--data-analysis--uqaLu\",\"dataAnalysis\":\"styles-module--data-analysis--uqaLu\",\"flow-testing\":\"styles-module--flow-testing--2T8IR\",\"flowTesting\":\"styles-module--flow-testing--2T8IR\"};"],"sourceRoot":""}