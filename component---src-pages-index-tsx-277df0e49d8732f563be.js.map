{"version":3,"sources":["webpack:///./src/components/Projects/styles.module.scss","webpack:///./node_modules/clsx/dist/clsx.m.js","webpack:///./src/components/Projects/index.tsx","webpack:///./src/pages/index.tsx"],"names":["module","exports","toVal","mix","k","y","str","Array","isArray","length","tmp","x","i","arguments","Projects","useState","enter","setEnter","current","sectionRef","useRef","useEffect","observer","IntersectionObserver","entries","isIntersecting","unobserve","threshold","observe","ref","className","classes","section","exhibition","clsx","defaultDimension","labelImageBackground","megatreopuz","labelBackground","labelCard","title","titleEnter","Index"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,gCAAgC,WAAa,mCAAmC,oBAAoB,0CAA0C,iBAAmB,0CAA0C,MAAQ,8BAA8B,kBAAkB,wCAAwC,eAAiB,wCAAwC,mBAAmB,yCAAyC,gBAAkB,yCAAyC,yBAAyB,+CAA+C,qBAAuB,+CAA+C,aAAa,mCAAmC,UAAY,mCAAmC,MAAQ,8BAA8B,cAAc,oCAAoC,WAAa,oCAAoC,YAAc,sC,6GCC33B,SAASC,EAAMC,GACb,IAAIC,EACAC,EACAC,EAAM,GAEV,GAAmB,iBAARH,GAAmC,iBAARA,EACpCG,GAAOH,OACF,GAAmB,iBAARA,EAChB,GAAII,MAAMC,QAAQL,GAChB,IAAKC,EAAI,EAAGA,EAAID,EAAIM,OAAQL,IACtBD,EAAIC,KACFC,EAAIH,EAAMC,EAAIC,OAChBE,IAAQA,GAAO,KACfA,GAAOD,QAKb,IAAKD,KAAKD,EACJA,EAAIC,KACNE,IAAQA,GAAO,KACfA,GAAOF,GAMf,OAAOE,EAGM,iBAMb,IALA,IACII,EACAC,EAFAC,EAAI,EAGJN,EAAM,GAEHM,EAAIC,UAAUJ,SACfC,EAAMG,UAAUD,QACdD,EAAIT,EAAMQ,MACZJ,IAAQA,GAAO,KACfA,GAAOK,GAKb,OAAOL,GCgBMQ,EA5D2B,WAAM,MACpBC,oBAAS,GAA5BC,EADuC,KAChCC,EADgC,OAEhBF,mBAC5B,eADKG,EAFuC,KAKxCC,GALwC,KAK3BC,iBAAuB,OAoB1C,OAlBAC,qBAAU,WAER,GAAIF,EAAWD,QAAS,CACtB,IAAII,EAAW,IAAIC,sBACjB,SAAAC,GACMA,EAAQ,GAAGC,iBACbR,GAAS,GACTK,EAASI,UAAUP,EAAWD,YAGlC,CACES,UAAW,KAGfL,EAASM,QAAQT,EAAWD,YAE7B,CAACC,EAAWD,UAGb,6BAASW,IAAKV,EAAYW,UAAWC,IAAQC,SAC3C,yBAAKF,UAAWC,IAAQE,YACtB,yBACEH,UAAWI,EACTH,IAAQI,iBACRJ,IAAQK,qBACRpB,GAASe,IAAQf,MACjBe,IAAQM,eAGZ,yBACEP,UAAWI,EACTH,IAAQI,iBACRJ,IAAQO,gBACRtB,GAASe,IAAQf,MACjBe,IAAQM,eAGZ,yBACEP,UAAWI,EACTH,IAAQI,iBACRJ,IAAQQ,UACRR,IAAQM,cAGV,wBAAIP,UAAWI,EAAKH,IAAQS,MAAOxB,GAASe,IAAQU,aACjDvB,OC1CEwB,UARoB,WACjC,OACE,oCACE,kBAAC,EAAD","file":"component---src-pages-index-tsx-277df0e49d8732f563be.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"styles-module--section--7LH9S\",\"exhibition\":\"styles-module--exhibition--M3RBx\",\"default-dimension\":\"styles-module--default-dimension--22l5S\",\"defaultDimension\":\"styles-module--default-dimension--22l5S\",\"enter\":\"styles-module--enter--1qdDW\",\"card-transition\":\"styles-module--card-transition--3bplo\",\"cardTransition\":\"styles-module--card-transition--3bplo\",\"label-background\":\"styles-module--label-background--1WyO4\",\"labelBackground\":\"styles-module--label-background--1WyO4\",\"label-image-background\":\"styles-module--label-image-background--2OeX8\",\"labelImageBackground\":\"styles-module--label-image-background--2OeX8\",\"label-card\":\"styles-module--label-card--1zBjj\",\"labelCard\":\"styles-module--label-card--1zBjj\",\"title\":\"styles-module--title--3E_dN\",\"title-enter\":\"styles-module--title-enter--2sttB\",\"titleEnter\":\"styles-module--title-enter--2sttB\",\"megatreopuz\":\"styles-module--megatreopuz--3Ph5S\"};","import \"core-js/modules/es6.array.is-array\";\n\nfunction toVal(mix) {\n  var k,\n      y,\n      str = '';\n\n  if (typeof mix === 'string' || typeof mix === 'number') {\n    str += mix;\n  } else if (typeof mix === 'object') {\n    if (Array.isArray(mix)) {\n      for (k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n          if (y = toVal(mix[k])) {\n            str && (str += ' ');\n            str += y;\n          }\n        }\n      }\n    } else {\n      for (k in mix) {\n        if (mix[k]) {\n          str && (str += ' ');\n          str += k;\n        }\n      }\n    }\n  }\n\n  return str;\n}\n\nexport default function () {\n  var i = 0,\n      tmp,\n      x,\n      str = '';\n\n  while (i < arguments.length) {\n    if (tmp = arguments[i++]) {\n      if (x = toVal(tmp)) {\n        str && (str += ' ');\n        str += x;\n      }\n    }\n  }\n\n  return str;\n}","import React, { useState, useRef, useEffect, useLayoutEffect } from \"react\"\nimport classes from \"./styles.module.scss\"\nimport clsx from \"clsx\"\nconst Projects: React.FunctionComponent = () => {\n  const [enter, setEnter] = useState(false)\n  const [current, setCurrent] = useState<\"Megatreopuz\" | \"Nirikshak\">(\n    \"Megatreopuz\"\n  )\n  const sectionRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    // When the section mounts, set up an initial intersection observer\n    if (sectionRef.current) {\n      let observer = new IntersectionObserver(\n        entries => {\n          if (entries[0].isIntersecting) {\n            setEnter(true)\n            observer.unobserve(sectionRef.current!)\n          }\n        },\n        {\n          threshold: 0.8,\n        }\n      )\n      observer.observe(sectionRef.current)\n    }\n  }, [sectionRef.current])\n\n  return (\n    <section ref={sectionRef} className={classes.section}>\n      <div className={classes.exhibition}>\n        <div\n          className={clsx(\n            classes.defaultDimension,\n            classes.labelImageBackground,\n            enter && classes.enter,\n            classes.megatreopuz\n          )}\n        ></div>\n        <div\n          className={clsx(\n            classes.defaultDimension,\n            classes.labelBackground,\n            enter && classes.enter,\n            classes.megatreopuz\n          )}\n        ></div>\n        <div\n          className={clsx(\n            classes.defaultDimension,\n            classes.labelCard,\n            classes.megatreopuz\n          )}\n        >\n          <h3 className={clsx(classes.title, enter && classes.titleEnter)}>\n            {current}\n          </h3>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport { PageProps } from \"gatsby\"\nimport \"../components/layout.css\"\nimport Projects from \"../components/Projects\"\n\nconst Index: React.FC<PageProps> = () => {\n  return (\n    <>\n      <Projects />\n    </>\n  )\n}\n\nexport default Index\n"],"sourceRoot":""}